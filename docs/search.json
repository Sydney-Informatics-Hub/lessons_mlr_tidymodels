[
  {
    "objectID": "400_analysis/step1.html",
    "href": "400_analysis/step1.html",
    "title": "New SIH project",
    "section": "",
    "text": "This is step 1"
  },
  {
    "objectID": "400_analysis/step1.html#quarto",
    "href": "400_analysis/step1.html#quarto",
    "title": "New SIH project",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "400_analysis/step1.html#running-code",
    "href": "400_analysis/step1.html#running-code",
    "title": "New SIH project",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\nCode\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\nCode\n2 * 2\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "400_analysis/step2.html",
    "href": "400_analysis/step2.html",
    "title": "New SIH project",
    "section": "",
    "text": "This is step 2"
  },
  {
    "objectID": "400_analysis/step2.html#quarto",
    "href": "400_analysis/step2.html#quarto",
    "title": "New SIH project",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "400_analysis/step2.html#running-code",
    "href": "400_analysis/step2.html#running-code",
    "title": "New SIH project",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\nCode\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\nCode\n2 * 2\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Machine learning with R and the tidyverse",
    "section": "",
    "text": "This is the landing page for the Sydney Informatics Hub’s “Machine learning with R and the tidyverse”."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "The Sydney Informatics Hub is a Core Research Facility of the University of Sydney.\nThe use of the SIH services including the Artemis HPC and associated support and training warrants acknowledgement in any publications, conference proceedings or posters describing work facilitated by these services.\nThe continued acknowledgement of the use of SIH facilities ensures the sustainability of our services."
  },
  {
    "objectID": "about.html#suggested-wording",
    "href": "about.html#suggested-wording",
    "title": "Sydney Informatics Hub",
    "section": "Suggested wording",
    "text": "Suggested wording\n\nGeneral acknowledgement:\nThe authors acknowledge the technical assistance provided by the Sydney Informatics Hub, a Core Research Facility of the University of Sydney.\n\n\nAcknowledging specific staff:\nThe authors acknowledge the technical assistance of (name of staff) of the Sydney Informatics Hub, a Core Research Facility of the University of Sydney.\nFor further information about acknowledging the Sydney Informatics Hub, please contact us at sih.info@sydney.edu.au."
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step1.html",
    "href": "100_data_cleaning_scripts_EDA/step1.html",
    "title": "New SIH project",
    "section": "",
    "text": "This is step 1"
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step1.html#quarto",
    "href": "100_data_cleaning_scripts_EDA/step1.html#quarto",
    "title": "New SIH project",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step1.html#running-code",
    "href": "100_data_cleaning_scripts_EDA/step1.html#running-code",
    "title": "New SIH project",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\nCode\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\nCode\n2 * 2\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step2.html",
    "href": "100_data_cleaning_scripts_EDA/step2.html",
    "title": "New SIH project",
    "section": "",
    "text": "This is step 2"
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step2.html#quarto",
    "href": "100_data_cleaning_scripts_EDA/step2.html#quarto",
    "title": "New SIH project",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "100_data_cleaning_scripts_EDA/step2.html#running-code",
    "href": "100_data_cleaning_scripts_EDA/step2.html#running-code",
    "title": "New SIH project",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\nCode\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\nCode\n2 * 2\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "000_scoping/scoping.html",
    "href": "000_scoping/scoping.html",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "",
    "text": "Clients: X, Y, Z\nFaculty: X\nSchool: ?\nResearch centre: ?\nCollaborators and their affilications: ?"
  },
  {
    "objectID": "000_scoping/scoping.html#project-scoping-details",
    "href": "000_scoping/scoping.html#project-scoping-details",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "Project scoping details",
    "text": "Project scoping details\n\nScope prepared by X\nScope prepared on\nProject manager\n\n\nResearcher Availability\n\nWho is the active person helping?\nHow available are they to participate in this study?"
  },
  {
    "objectID": "000_scoping/scoping.html#project-summary",
    "href": "000_scoping/scoping.html#project-summary",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "2. Project summary",
    "text": "2. Project summary\n\nResearch context\nThis research aims to:\n\nX\nB\n\n\n\nClient needs\n\nA\nB\nC\n\n\n\nCurrent data\n\nX"
  },
  {
    "objectID": "000_scoping/scoping.html#project-implementation",
    "href": "000_scoping/scoping.html#project-implementation",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "3. Project Implementation",
    "text": "3. Project Implementation\n\nProject plan\n\nWhat needs to be done?\nWhat’s the timeline for each step?\n\n\n\nScheduling\n\nAny notes?\n\n\n\nDeliverables\n\nA\nB\nC\n\n\n\nSIH skills required\n\nPython/R/SQL?\nXXX\nyyyy\n\n\n\nIn scope\n\n\nOut of scope\n\nMore than X weeks FTE work\n\n\n\nAcceptance Criteria\n\nx\n\n\n\nHandover plan\n\nX"
  },
  {
    "objectID": "000_scoping/scoping.html#project-evaluation",
    "href": "000_scoping/scoping.html#project-evaluation",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "4. Project Evaluation",
    "text": "4. Project Evaluation\n\nSIH Benefits (Summary)\n\nX/\n\n\n\nCost (FTE weeks)\n\nX weeks FTE\n\n\nSIH staff will fill out the below"
  },
  {
    "objectID": "000_scoping/scoping.html#essential-criteria",
    "href": "000_scoping/scoping.html#essential-criteria",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "5. Essential criteria",
    "text": "5. Essential criteria\n\n\n\nSydney Researcher\nY:\n\n\nClear project statement\nY\n\n\nData quality\nY\n\n\nSolvable\nY\n\n\nDomain Expert\nY\n\n\nPlanned\nY\n\n\nStrategic Plan\nY\n\n\nData Science\nY\n\n\nPriority\nY: Health\n\n\nDeliverables\nY\n\n\nInfrastructure\nY"
  },
  {
    "objectID": "000_scoping/scoping.html#value-and-impact",
    "href": "000_scoping/scoping.html#value-and-impact",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "6. Value and Impact",
    "text": "6. Value and Impact\n\nDrives the success of larger groups, larger collaborations or high-profile projects.\n\nScore: X/10\nDetails:\n\nName of Research Group/Centre:\nName of Collaboration:\n\n\n\n\nPublications that are high-impact - foundational, highly cited, with potential for wider adoption of methods and knock-on outcomes.\n\nScore: X/10\n\n\nTarget Journal: Nature (Impact Factor 40000)\n\n\nName of Authors: Amazing researcher, (name of SIH data analyst?)\nProposed Paper Title: How to write a Science paper in 5 days.\n\n\n\nPotential for patents, start-ups, open-source code, policy influence.\n\nPolicy influence X/10\n\n\n\nDevelop funding opportunities for the university and/or SIH, such as large CoE-scale grants and further involvement with successful and well funded groups.\n\nScore: X/10\nName of Grant Application:\nDate of Proposed Submission:\n\n\n\nTotal score\nX/40 (refer to Rubric for scoring guide)"
  },
  {
    "objectID": "000_scoping/scoping.html#kpi",
    "href": "000_scoping/scoping.html#kpi",
    "title": "PIPE-XXX: PROJECT TITLE",
    "section": "7. KPI",
    "text": "7. KPI\n\n\n\nPapers SIH Coauthors (*measure only, not KPI)\nN\n\n\nNumber of Papers: Papers SIH Acknowledged\nY - Number of Papers: 1000\n\n\nCollaborators who publish\nName: Amazing Researcher\n\n\nCollaborators who have grants\nName: Amazing Researcher\n\n\nGrant applications created\nY:\n\n\nGrants project supporting\nName of Grant:\n\n\nSoftware released for public use\nY/N: TBA\n\n\nNew Clients\nY\n\n\nKPI Score\n?/6"
  },
  {
    "objectID": "100_dataset1/step1.html",
    "href": "100_dataset1/step1.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:\n\n\n\n\nUse tidyverse functions for exploratory data analysis;\nIntroduce and explore the Ames Housing dataset.\nFirst, let’s load the required packages. We will use the tidyverse for general data processing and visualisation.\nWe will use the Ames housing data to explore different ML approaches to regression. This dataset was “designed” by Dean De Cock as an alternative to the “classic” Boston housing dataset, and has been extensively used in ML teaching. It is also available from kaggle as part of its advanced regression practice competition.\nThe Ames Housing Data Documentation file describes the independent variables presented in the data. This includes:\nWe will explore both the “uncleaned” data available from kaggle/UCI, and the processed data available in the AmesHousing package in R, for which documentation is available here. It can be useful for understading what each of the independent variables mean."
  },
  {
    "objectID": "100_dataset1/step1.html#quarto",
    "href": "100_dataset1/step1.html#quarto",
    "title": "Sydney Informatics Hub",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "100_dataset1/step1.html#running-code",
    "href": "100_dataset1/step1.html#running-code",
    "title": "Sydney Informatics Hub",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n2 * 2\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "100_dataset1/step2.html",
    "href": "100_dataset1/step2.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:\n\n\n\n\nFrom base R to tidymodels;\nSplit our data into training and test sets;\nPreprocess the training data;\nSpecify a linear regression model;\nTrain our model on the training data;\nTransform the test data and obtain predictions using our trained model.\n\n\n\n\n\n\n\n\n\nExercise:\n\n\n\nIn this case study, you will predict houses selling price from characteristics of these houses, like size and layout of the living space in the house. What kind of model will you build?\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nTo predict a continuous, numeric quantity like selling price, use regression models.\n\n\n\nLoad in the packages we’ll be using for modelling:\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(rsample)\nlibrary(vip) \n\n\n\nBuild a simple linear model usign base R’s lm() function\n\n#fit a linear model\names_fit_all <- lm(Sale_Price ~ ., data = ames_data)\n\n#Print the summary of the model\nsummary(ames_fit_all)\n\n\nCall:\nlm(formula = Sale_Price ~ ., data = ames_data)\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.46479 -0.02019  0.00009  0.02110  0.20903 \nCoefficients: (7 not defined because of singularities)\n                                                       Estimate Std. Error\n(Intercept)                                          -1.466e+01  1.886e+01\nMS_SubClassOne_Story_1945_and_Older                  -2.005e-02  6.094e-03\nMS_SubClassOne_Story_with_Finished_Attic_All_Ages     8.964e-03  2.061e-02\nMS_SubClassOne_and_Half_Story_Unfinished_All_Ages     1.334e-02  2.428e-02\nMS_SubClassOne_and_Half_Story_Finished_All_Ages       1.675e-02  1.108e-02\nMS_SubClassTwo_Story_1946_and_Newer                  -1.370e-02  9.587e-03\nMS_SubClassTwo_Story_1945_and_Older                   1.582e-02  1.056e-02\nMS_SubClassTwo_and_Half_Story_All_Ages                2.779e-02  1.849e-02\nMS_SubClassSplit_or_Multilevel                       -3.897e-02  1.856e-02\nMS_SubClassSplit_Foyer                               -7.937e-03  1.300e-02\nMS_SubClassDuplex_All_Styles_and_Ages                -3.934e-02  9.781e-03\nMS_SubClassOne_Story_PUD_1946_and_Newer              -2.003e-02  1.788e-02\nMS_SubClassOne_and_Half_Story_PUD_All_Ages           -9.411e-02  5.262e-02\nMS_SubClassTwo_Story_PUD_1946_and_Newer              -5.566e-02  2.102e-02\nMS_SubClassPUD_Multilevel_Split_Level_Foyer          -5.074e-02  2.456e-02\nMS_SubClassTwo_Family_conversion_All_Styles_and_Ages  1.767e-03  3.069e-02\nMS_ZoningResidential_High_Density                     1.845e-03  1.295e-02\nMS_ZoningResidential_Low_Density                     -1.603e-03  8.678e-03\nMS_ZoningResidential_Medium_Density                  -2.337e-02  9.928e-03\nMS_ZoningA_agr                                       -7.772e-02  7.569e-02\nMS_ZoningC_all                                       -8.881e-02  1.546e-02\nMS_ZoningI_all                                       -3.015e-02  4.587e-02\nLot_Frontage                                          2.292e-05  3.076e-05\nLot_Area                                              1.212e-06  1.641e-07\nStreetPave                                            5.014e-02  1.545e-02\nAlleyNo_Alley_Access                                 -1.065e-02  5.227e-03\nAlleyPaved                                           -3.210e-03  8.044e-03\nLot_ShapeSlightly_Irregular                          -1.320e-03  2.202e-03\nLot_ShapeModerately_Irregular                         3.917e-03  5.809e-03\nLot_ShapeIrregular                                   -3.377e-03  1.228e-02\nLand_ContourHLS                                       5.369e-03  6.735e-03\nLand_ContourLow                                      -4.965e-03  8.755e-03\nLand_ContourLvl                                       4.931e-03  4.946e-03\nUtilitiesNoSeWa                                      -7.590e-02  4.989e-02\nUtilitiesNoSewr                                       3.107e-02  4.130e-02\nLot_ConfigCulDSac                                     3.035e-03  4.384e-03\nLot_ConfigFR2                                        -1.144e-02  5.629e-03\nLot_ConfigFR3                                        -9.001e-03  1.277e-02\nLot_ConfigInside                                     -3.333e-03  2.356e-03\nLand_SlopeMod                                         3.844e-03  5.368e-03\nLand_SlopeSev                                        -4.202e-02  1.637e-02\nNeighborhoodCollege_Creek                            -1.241e-02  1.586e-02\nNeighborhoodOld_Town                                 -6.725e-03  7.369e-03\nNeighborhoodEdwards                                  -2.308e-02  1.254e-02\nNeighborhoodSomerset                                  2.252e-02  9.759e-03\nNeighborhoodNorthridge_Heights                        2.103e-02  9.482e-03\nNeighborhoodGilbert                                  -3.813e-03  8.027e-03\nNeighborhoodSawyer                                   -1.479e-03  1.158e-02\nNeighborhoodNorthwest_Ames                           -6.863e-03  6.080e-03\nNeighborhoodSawyer_West                              -1.863e-02  1.422e-02\nNeighborhoodMitchell                                  1.878e-03  1.486e-02\nNeighborhoodBrookside                                 2.203e-02  7.739e-03\nNeighborhoodCrawford                                  4.873e-02  1.121e-02\nNeighborhoodIowa_DOT_and_Rail_Road                    8.560e-03  1.030e-02\nNeighborhoodTimberland                                5.076e-03  1.667e-02\nNeighborhoodNorthridge                                1.560e-02  9.985e-03\nNeighborhoodStone_Brook                               4.323e-02  1.007e-02\nNeighborhoodSouth_and_West_of_Iowa_State_University   1.569e-03  1.286e-02\nNeighborhoodClear_Creek                               1.351e-02  1.439e-02\nNeighborhoodMeadow_Village                           -2.787e-02  1.787e-02\nNeighborhoodBriardale                                 1.082e-02  1.302e-02\nNeighborhoodBloomington_Heights                      -7.826e-04  1.245e-02\nNeighborhoodVeenker                                  -1.626e-03  1.229e-02\nNeighborhoodNorthpark_Villa                           2.493e-02  1.938e-02\nNeighborhoodBlueste                                   3.173e-02  1.987e-02\nNeighborhoodGreens                                    4.507e-02  1.943e-02\nNeighborhoodGreen_Hills                               2.219e-01  3.519e-02\nNeighborhoodLandmark                                 -9.224e-03  4.799e-02\nCondition_1Feedr                                      5.475e-03  6.471e-03\nCondition_1Norm                                       2.760e-02  5.388e-03\nCondition_1PosA                                       2.857e-02  1.228e-02\nCondition_1PosN                                       3.239e-02  9.495e-03\nCondition_1RRAe                                      -1.394e-03  1.064e-02\nCondition_1RRAn                                       9.930e-03  8.945e-03\nCondition_1RRNe                                       1.030e-02  1.967e-02\nCondition_1RRNn                                       1.380e-02  1.640e-02\nCondition_2Feedr                                     -9.622e-03  2.497e-02\nCondition_2Norm                                       7.785e-03  2.169e-02\nCondition_2PosA                                       5.216e-02  3.392e-02\nCondition_2PosN                                      -1.968e-02  3.469e-02\nCondition_2RRAe                                      -7.715e-02  6.400e-02\nCondition_2RRAn                                      -1.469e-02  4.998e-02\nCondition_2RRNn                                       9.715e-03  3.874e-02\nBldg_TypeTwoFmCon                                    -1.077e-02  3.057e-02\nBldg_TypeDuplex                                              NA         NA\nBldg_TypeTwnhs                                       -1.984e-02  1.883e-02\nBldg_TypeTwnhsE                                      -2.115e-03  1.779e-02\nHouse_StyleOne_and_Half_Unf                           7.563e-03  2.311e-02\nHouse_StyleOne_Story                                  1.525e-02  1.115e-02\nHouse_StyleSFoyer                                     2.764e-02  1.462e-02\nHouse_StyleSLvl                                       4.935e-02  1.951e-02\nHouse_StyleTwo_and_Half_Fin                          -3.917e-02  2.459e-02\nHouse_StyleTwo_and_Half_Unf                           4.905e-03  1.751e-02\nHouse_StyleTwo_Story                                  1.604e-02  1.023e-02\nOverall_QualPoor                                      3.626e-03  4.033e-02\nOverall_QualFair                                      1.275e-01  3.893e-02\nOverall_QualBelow_Average                             1.483e-01  3.871e-02\nOverall_QualAverage                                   1.748e-01  3.886e-02\nOverall_QualAbove_Average                             1.883e-01  3.901e-02\nOverall_QualGood                                      2.006e-01  3.909e-02\nOverall_QualVery_Good                                 2.243e-01  3.922e-02\nOverall_QualExcellent                                 2.559e-01  3.980e-02\nOverall_QualVery_Excellent                            2.590e-01  4.113e-02\nOverall_CondPoor                                     -9.117e-02  3.098e-02\nOverall_CondFair                                     -6.622e-02  2.418e-02\nOverall_CondBelow_Average                            -2.250e-02  2.395e-02\nOverall_CondAverage                                  -3.496e-04  2.375e-02\nOverall_CondAbove_Average                             1.188e-02  2.385e-02\nOverall_CondGood                                      3.020e-02  2.395e-02\nOverall_CondVery_Good                                 3.579e-02  2.419e-02\nOverall_CondExcellent                                 5.091e-02  2.527e-02\nRoof_StyleGable                                       2.428e-02  2.072e-02\nRoof_StyleGambrel                                     5.080e-03  2.326e-02\nRoof_StyleHip                                         2.109e-02  2.087e-02\nRoof_StyleMansard                                     1.946e-03  2.571e-02\nRoof_StyleShed                                        6.109e-02  3.584e-02\nRoof_MatlMembran                                      1.295e-01  5.214e-02\nRoof_MatlMetal                                        8.386e-02  5.135e-02\nRoof_MatlRoll                                         3.386e-02  4.637e-02\nRoof_MatlTar&Grv                                      2.187e-02  1.782e-02\nRoof_MatlWdShake                                     -7.494e-04  1.728e-02\nRoof_MatlWdShngl                                      2.051e-02  2.074e-02\nExterior_1stAsphShn                                  -5.269e-03  4.883e-02\nExterior_1stBrkComm                                   4.403e-02  2.785e-02\nExterior_1stBrkFace                                   6.474e-02  1.648e-02\nExterior_1stCBlock                                    1.061e-01  5.755e-02\nExterior_1stCemntBd                                  -1.376e-02  2.598e-02\nExterior_1stHdBoard                                   2.250e-02  1.609e-02\nExterior_1stImStucc                                   2.225e-02  4.892e-02\nExterior_1stMetalSd                                   4.072e-02  1.808e-02\nExterior_1stPlywood                                   3.003e-02  1.577e-02\nExterior_1stPreCast                                   2.261e-01  4.802e-02\nExterior_1stStone                                     1.669e-02  3.897e-02\nExterior_1stStucco                                    3.757e-02  1.786e-02\nExterior_1stVinylSd                                   2.170e-02  1.755e-02\nExterior_1stWd Sdng                                   2.286e-02  1.557e-02\nExterior_1stWdShing                                   2.952e-02  1.679e-02\nExterior_2ndAsphShn                                   2.736e-02  3.687e-02\nExterior_2ndBrk Cmn                                  -1.253e-02  2.540e-02\nExterior_2ndBrkFace                                  -1.801e-02  1.807e-02\nExterior_2ndCBlock                                   -2.846e-02  4.707e-02\nExterior_2ndCmentBd                                   4.666e-02  2.634e-02\nExterior_2ndHdBoard                                   1.643e-03  1.656e-02\nExterior_2ndImStucc                                  -1.052e-02  2.015e-02\nExterior_2ndMetalSd                                  -9.421e-03  1.846e-02\nExterior_2ndOther                                    -2.789e-02  4.820e-02\nExterior_2ndPlywood                                  -4.609e-03  1.596e-02\nExterior_2ndPreCast                                          NA         NA\nExterior_2ndStone                                    -1.605e-02  2.712e-02\nExterior_2ndStucco                                    6.150e-03  1.822e-02\nExterior_2ndVinylSd                                   6.461e-03  1.792e-02\nExterior_2ndWd Sdng                                   4.401e-03  1.608e-02\nExterior_2ndWd Shng                                  -2.120e-03  1.683e-02\nMas_Vnr_TypeBrkFace                                   9.844e-03  9.469e-03\nMas_Vnr_TypeCBlock                                   -1.664e-01  5.634e-02\nMas_Vnr_TypeNone                                      1.086e-02  9.489e-03\nMas_Vnr_TypeStone                                     2.006e-02  9.944e-03\nMas_Vnr_Area                                          1.253e-05  7.896e-06\nExter_QualFair                                        1.090e-02  1.276e-02\nExter_QualGood                                       -8.396e-03  7.048e-03\nExter_QualTypical                                    -1.370e-02  7.729e-03\nExter_CondFair                                       -1.904e-02  1.581e-02\nExter_CondGood                                       -1.960e-03  1.425e-02\nExter_CondPoor                                       -3.340e-02  3.890e-02\nExter_CondTypical                                     3.084e-03  1.425e-02\nFoundationCBlock                                      3.777e-03  4.124e-03\nFoundationPConc                                       8.855e-03  4.469e-03\nFoundationSlab                                       -1.175e-02  1.242e-02\nFoundationStone                                       3.024e-02  1.487e-02\nFoundationWood                                       -2.232e-02  2.107e-02\nBsmt_QualFair                                        -1.740e-02  7.828e-03\nBsmt_QualGood                                        -9.002e-03  4.406e-03\nBsmt_QualNo_Basement                                 -1.193e-02  8.084e-02\nBsmt_QualPoor                                         3.346e-02  3.765e-02\nBsmt_QualTypical                                     -8.089e-03  5.500e-03\nBsmt_CondFair                                        -6.540e-04  2.726e-02\nBsmt_CondGood                                         9.054e-03  2.705e-02\nBsmt_CondNo_Basement                                         NA         NA\nBsmt_CondPoor                                         2.577e-02  3.704e-02\nBsmt_CondTypical                                      2.038e-03  2.676e-02\nBsmt_ExposureGd                                       1.450e-02  3.932e-03\nBsmt_ExposureMn                                      -8.294e-03  3.948e-03\nBsmt_ExposureNo                                      -6.967e-03  2.973e-03\nBsmt_ExposureNo_Basement                             -1.119e-02  2.562e-02\nBsmtFin_Type_1BLQ                                    -1.396e-02  1.393e-02\nBsmtFin_Type_1GLQ                                    -1.825e-02  2.713e-02\nBsmtFin_Type_1LwQ                                    -4.524e-02  4.062e-02\nBsmtFin_Type_1No_Basement                                    NA         NA\nBsmtFin_Type_1Rec                                    -6.431e-02  6.748e-02\nBsmtFin_Type_1Unf                                    -7.015e-02  8.093e-02\nBsmtFin_SF_1                                          1.078e-02  1.348e-02\nBsmtFin_Type_2BLQ                                    -1.577e-02  8.694e-03\nBsmtFin_Type_2GLQ                                     1.574e-02  1.059e-02\nBsmtFin_Type_2LwQ                                    -6.788e-03  8.489e-03\nBsmtFin_Type_2No_Basement                            -3.417e-02  4.536e-02\nBsmtFin_Type_2Rec                                    -1.145e-02  8.090e-03\nBsmtFin_Type_2Unf                                    -1.709e-03  8.308e-03\nBsmtFin_SF_2                                         -6.590e-06  9.733e-06\nBsmt_Unf_SF                                          -2.659e-05  3.976e-06\nTotal_Bsmt_SF                                         5.936e-05  6.338e-06\nHeatingGasA                                           5.886e-02  4.677e-02\nHeatingGasW                                           7.660e-02  4.773e-02\nHeatingGrav                                           9.950e-03  5.010e-02\nHeatingOthW                                           3.145e-02  5.739e-02\nHeatingWall                                           5.747e-02  5.227e-02\nHeating_QCFair                                       -8.206e-03  5.965e-03\nHeating_QCGood                                       -3.752e-03  2.717e-03\nHeating_QCPoor                                       -9.271e-02  3.254e-02\nHeating_QCTypical                                    -1.220e-02  2.672e-03\nCentral_AirY                                          1.571e-02  4.754e-03\nElectricalFuseF                                      -2.161e-03  7.877e-03\nElectricalFuseP                                      -2.961e-03  1.793e-02\nElectricalMix                                         8.145e-02  6.306e-02\nElectricalSBrkr                                      -3.277e-03  3.865e-03\nElectricalUnknown                                     1.601e-02  4.477e-02\nFirst_Flr_SF                                          1.185e-04  6.657e-06\nSecond_Flr_SF                                         1.165e-04  7.408e-06\nLow_Qual_Fin_SF                                       1.043e-04  2.213e-05\nGr_Liv_Area                                                  NA         NA\nBsmt_Full_Bath                                        8.582e-03  2.523e-03\nBsmt_Half_Bath                                        2.022e-03  3.860e-03\nFull_Bath                                             1.236e-02  2.832e-03\nHalf_Bath                                             9.127e-03  2.695e-03\nBedroom_AbvGr                                        -4.051e-03  1.796e-03\nKitchen_AbvGr                                        -7.795e-03  8.331e-03\nKitchen_QualFair                                     -2.431e-02  8.263e-03\nKitchen_QualGood                                     -1.740e-02  4.962e-03\nKitchen_QualPoor                                      8.633e-02  4.766e-02\nKitchen_QualTypical                                  -2.219e-02  5.457e-03\nTotRms_AbvGrd                                         8.576e-04  1.205e-03\nFunctionalMaj2                                       -5.596e-02  2.047e-02\nFunctionalMin1                                        2.814e-02  1.307e-02\nFunctionalMin2                                        1.948e-02  1.319e-02\nFunctionalMod                                         7.260e-03  1.444e-02\nFunctionalSal                                        -3.365e-01  4.888e-02\nFunctionalSev                                        -1.293e-01  3.695e-02\nFunctionalTyp                                         3.827e-02  1.182e-02\nFireplaces                                            6.677e-03  3.339e-03\nFireplace_QuFair                                      1.108e-03  9.323e-03\nFireplace_QuGood                                      4.744e-03  7.470e-03\nFireplace_QuNo_Fireplace                              4.802e-04  8.473e-03\nFireplace_QuPoor                                      4.797e-03  1.030e-02\nFireplace_QuTypical                                   4.357e-03  7.690e-03\nGarage_TypeBasment                                   -4.445e-03  8.885e-03\nGarage_TypeBuiltIn                                   -1.462e-03  4.332e-03\nGarage_TypeCarPort                                   -2.151e-02  1.273e-02\nGarage_TypeDetchd                                    -3.710e-03  3.084e-03\nGarage_TypeMore_Than_Two_Types                       -1.797e-02  1.036e-02\nGarage_TypeNo_Garage                                 -2.989e-02  3.697e-02\nGarage_FinishNo_Garage                               -2.089e-02  4.649e-02\nGarage_FinishRFn                                     -1.859e-04  2.604e-03\nGarage_FinishUnf                                      2.377e-03  3.117e-03\nGarage_Cars                                           1.207e-02  2.998e-03\nGarage_Area                                           2.170e-05  1.005e-05\nGarage_QualFair                                      -1.179e-01  3.961e-02\nGarage_QualGood                                      -9.257e-02  3.921e-02\nGarage_QualNo_Garage                                         NA         NA\nGarage_QualPoor                                      -1.550e-01  4.869e-02\nGarage_QualTypical                                   -1.084e-01  3.926e-02\nGarage_CondFair                                       5.137e-02  3.782e-02\nGarage_CondGood                                       6.099e-02  3.882e-02\nGarage_CondNo_Garage                                         NA         NA\nGarage_CondPoor                                       7.456e-02  4.064e-02\nGarage_CondTypical                                    6.499e-02  3.724e-02\nPaved_DrivePartial_Pavement                          -2.745e-03  6.945e-03\nPaved_DrivePaved                                      6.492e-03  4.402e-03\nWood_Deck_SF                                          2.687e-05  7.686e-06\nOpen_Porch_SF                                         3.163e-05  1.470e-05\nEnclosed_Porch                                        5.750e-05  1.556e-05\nThree_season_porch                                    4.048e-05  3.463e-05\nScreen_Porch                                          1.092e-04  1.609e-05\nPool_Area                                            -3.353e-04  1.406e-04\nPool_QCFair                                           1.656e-01  7.426e-02\nPool_QCGood                                           2.106e-01  7.050e-02\nPool_QCNo_Pool                                       -8.469e-02  4.811e-02\nPool_QCTypical                                        7.993e-02  4.604e-02\nFenceGood_Wood                                       -4.727e-03  6.256e-03\nFenceMinimum_Privacy                                  1.851e-04  5.089e-03\nFenceMinimum_Wood_Wire                               -2.963e-03  1.383e-02\nFenceNo_Fence                                         6.973e-04  4.582e-03\nMisc_FeatureNone                                     -1.050e-03  3.796e-02\nMisc_FeatureOthr                                     -1.896e-02  3.796e-02\nMisc_FeatureShed                                     -5.064e-03  3.610e-02\nMisc_FeatureTenC                                     -1.486e-01  7.441e-02\nMisc_Val                                              2.306e-06  3.459e-06\nMo_Sold                                              -3.693e-05  3.207e-04\nYear_Sold                                            -6.984e-04  6.815e-04\nSale_TypeCon                                          5.722e-02  2.109e-02\nSale_TypeConLD                                        2.002e-02  1.109e-02\nSale_TypeConLI                                       -1.668e-02  1.609e-02\nSale_TypeConLw                                        4.295e-02  1.745e-02\nSale_TypeCWD                                          1.353e-02  1.410e-02\nSale_TypeNew                                          2.614e-02  2.019e-02\nSale_TypeOth                                          1.668e-02  1.774e-02\nSale_TypeVWD                                          6.536e-03  4.548e-02\nSale_TypeWD                                           5.651e-03  5.465e-03\nSale_ConditionAdjLand                                 8.084e-02  1.510e-02\nSale_ConditionAlloca                                  3.197e-02  1.130e-02\nSale_ConditionFamily                                  1.239e-02  7.617e-03\nSale_ConditionNormal                                  3.335e-02  3.890e-03\nSale_ConditionPartial                                 2.598e-02  1.944e-02\nLongitude                                            -2.033e-01  1.866e-01\nLatitude                                              3.964e-02  2.742e-01\nTime_Since_Remodel                                   -3.044e-04  7.270e-05\nHouse_Age                                            -9.564e-04  1.105e-04\n                                                     t value Pr(>|t|)    \n(Intercept)                                           -0.777 0.437103    \nMS_SubClassOne_Story_1945_and_Older                   -3.291 0.001013 ** \nMS_SubClassOne_Story_with_Finished_Attic_All_Ages      0.435 0.663688    \nMS_SubClassOne_and_Half_Story_Unfinished_All_Ages      0.549 0.582840    \nMS_SubClassOne_and_Half_Story_Finished_All_Ages        1.511 0.130830    \nMS_SubClassTwo_Story_1946_and_Newer                   -1.429 0.153266    \nMS_SubClassTwo_Story_1945_and_Older                    1.498 0.134313    \nMS_SubClassTwo_and_Half_Story_All_Ages                 1.503 0.133001    \nMS_SubClassSplit_or_Multilevel                        -2.100 0.035822 *  \nMS_SubClassSplit_Foyer                                -0.611 0.541507    \nMS_SubClassDuplex_All_Styles_and_Ages                 -4.022 5.94e-05 ***\nMS_SubClassOne_Story_PUD_1946_and_Newer               -1.121 0.262599    \nMS_SubClassOne_and_Half_Story_PUD_All_Ages            -1.789 0.073799 .  \nMS_SubClassTwo_Story_PUD_1946_and_Newer               -2.648 0.008155 ** \nMS_SubClassPUD_Multilevel_Split_Level_Foyer           -2.066 0.038971 *  \nMS_SubClassTwo_Family_conversion_All_Styles_and_Ages   0.058 0.954092    \nMS_ZoningResidential_High_Density                      0.143 0.886670    \nMS_ZoningResidential_Low_Density                      -0.185 0.853438    \nMS_ZoningResidential_Medium_Density                   -2.354 0.018660 *  \nMS_ZoningA_agr                                        -1.027 0.304621    \nMS_ZoningC_all                                        -5.745 1.02e-08 ***\nMS_ZoningI_all                                        -0.657 0.511057    \nLot_Frontage                                           0.745 0.456299    \nLot_Area                                               7.388 1.99e-13 ***\nStreetPave                                             3.244 0.001193 ** \nAlleyNo_Alley_Access                                  -2.038 0.041696 *  \nAlleyPaved                                            -0.399 0.689885    \nLot_ShapeSlightly_Irregular                           -0.600 0.548810    \nLot_ShapeModerately_Irregular                          0.674 0.500238    \nLot_ShapeIrregular                                    -0.275 0.783336    \nLand_ContourHLS                                        0.797 0.425407    \nLand_ContourLow                                       -0.567 0.570707    \nLand_ContourLvl                                        0.997 0.318875    \nUtilitiesNoSeWa                                       -1.521 0.128312    \nUtilitiesNoSewr                                        0.752 0.451971    \nLot_ConfigCulDSac                                      0.692 0.488842    \nLot_ConfigFR2                                         -2.032 0.042281 *  \nLot_ConfigFR3                                         -0.705 0.480889    \nLot_ConfigInside                                      -1.415 0.157208    \nLand_SlopeMod                                          0.716 0.473927    \nLand_SlopeSev                                         -2.567 0.010313 *  \nNeighborhoodCollege_Creek                             -0.782 0.434100    \nNeighborhoodOld_Town                                  -0.913 0.361544    \nNeighborhoodEdwards                                   -1.841 0.065695 .  \nNeighborhoodSomerset                                   2.308 0.021092 *  \nNeighborhoodNorthridge_Heights                         2.218 0.026657 *  \nNeighborhoodGilbert                                   -0.475 0.634761    \nNeighborhoodSawyer                                    -0.128 0.898313    \nNeighborhoodNorthwest_Ames                            -1.129 0.259150    \nNeighborhoodSawyer_West                               -1.310 0.190246    \nNeighborhoodMitchell                                   0.126 0.899402    \nNeighborhoodBrookside                                  2.847 0.004453 ** \nNeighborhoodCrawford                                   4.348 1.43e-05 ***\nNeighborhoodIowa_DOT_and_Rail_Road                     0.831 0.405867    \nNeighborhoodTimberland                                 0.304 0.760825    \nNeighborhoodNorthridge                                 1.562 0.118373    \nNeighborhoodStone_Brook                                4.295 1.81e-05 ***\nNeighborhoodSouth_and_West_of_Iowa_State_University    0.122 0.902910    \nNeighborhoodClear_Creek                                0.939 0.347962    \nNeighborhoodMeadow_Village                            -1.559 0.119038    \nNeighborhoodBriardale                                  0.831 0.406008    \nNeighborhoodBloomington_Heights                       -0.063 0.949889    \nNeighborhoodVeenker                                   -0.132 0.894813    \nNeighborhoodNorthpark_Villa                            1.286 0.198570    \nNeighborhoodBlueste                                    1.597 0.110335    \nNeighborhoodGreens                                     2.320 0.020433 *  \nNeighborhoodGreen_Hills                                6.306 3.35e-10 ***\nNeighborhoodLandmark                                  -0.192 0.847604    \nCondition_1Feedr                                       0.846 0.397611    \nCondition_1Norm                                        5.123 3.22e-07 ***\nCondition_1PosA                                        2.327 0.020033 *  \nCondition_1PosN                                        3.411 0.000656 ***\nCondition_1RRAe                                       -0.131 0.895824    \nCondition_1RRAn                                        1.110 0.267054    \nCondition_1RRNe                                        0.524 0.600497    \nCondition_1RRNn                                        0.842 0.400053    \nCondition_2Feedr                                      -0.385 0.699974    \nCondition_2Norm                                        0.359 0.719637    \nCondition_2PosA                                        1.538 0.124178    \nCondition_2PosN                                       -0.567 0.570503    \nCondition_2RRAe                                       -1.205 0.228188    \nCondition_2RRAn                                       -0.294 0.768835    \nCondition_2RRNn                                        0.251 0.802002    \nBldg_TypeTwoFmCon                                     -0.352 0.724623    \nBldg_TypeDuplex                                           NA       NA    \nBldg_TypeTwnhs                                        -1.053 0.292295    \nBldg_TypeTwnhsE                                       -0.119 0.905403    \nHouse_StyleOne_and_Half_Unf                            0.327 0.743493    \nHouse_StyleOne_Story                                   1.368 0.171388    \nHouse_StyleSFoyer                                      1.891 0.058713 .  \nHouse_StyleSLvl                                        2.529 0.011491 *  \nHouse_StyleTwo_and_Half_Fin                           -1.593 0.111292    \nHouse_StyleTwo_and_Half_Unf                            0.280 0.779393    \nHouse_StyleTwo_Story                                   1.568 0.117034    \nOverall_QualPoor                                       0.090 0.928380    \nOverall_QualFair                                       3.276 0.001068 ** \nOverall_QualBelow_Average                              3.832 0.000130 ***\nOverall_QualAverage                                    4.498 7.14e-06 ***\nOverall_QualAbove_Average                              4.829 1.45e-06 ***\nOverall_QualGood                                       5.132 3.08e-07 ***\nOverall_QualVery_Good                                  5.718 1.20e-08 ***\nOverall_QualExcellent                                  6.430 1.51e-10 ***\nOverall_QualVery_Excellent                             6.298 3.53e-10 ***\nOverall_CondPoor                                      -2.943 0.003278 ** \nOverall_CondFair                                      -2.739 0.006207 ** \nOverall_CondBelow_Average                             -0.940 0.347480    \nOverall_CondAverage                                   -0.015 0.988258    \nOverall_CondAbove_Average                              0.498 0.618397    \nOverall_CondGood                                       1.261 0.207398    \nOverall_CondVery_Good                                  1.480 0.139117    \nOverall_CondExcellent                                  2.015 0.044055 *  \nRoof_StyleGable                                        1.172 0.241388    \nRoof_StyleGambrel                                      0.218 0.827121    \nRoof_StyleHip                                          1.010 0.312356    \nRoof_StyleMansard                                      0.076 0.939659    \nRoof_StyleShed                                         1.705 0.088358 .  \nRoof_MatlMembran                                       2.484 0.013046 *  \nRoof_MatlMetal                                         1.633 0.102570    \nRoof_MatlRoll                                          0.730 0.465368    \nRoof_MatlTar&Grv                                       1.227 0.219776    \nRoof_MatlWdShake                                      -0.043 0.965411    \nRoof_MatlWdShngl                                       0.989 0.322777    \nExterior_1stAsphShn                                   -0.108 0.914080    \nExterior_1stBrkComm                                    1.581 0.114032    \nExterior_1stBrkFace                                    3.930 8.72e-05 ***\nExterior_1stCBlock                                     1.843 0.065469 .  \nExterior_1stCemntBd                                   -0.530 0.596323    \nExterior_1stHdBoard                                    1.398 0.162235    \nExterior_1stImStucc                                    0.455 0.649236    \nExterior_1stMetalSd                                    2.253 0.024360 *  \nExterior_1stPlywood                                    1.904 0.057007 .  \nExterior_1stPreCast                                    4.708 2.63e-06 ***\nExterior_1stStone                                      0.428 0.668412    \nExterior_1stStucco                                     2.104 0.035501 *  \nExterior_1stVinylSd                                    1.236 0.216472    \nExterior_1stWd Sdng                                    1.468 0.142154    \nExterior_1stWdShing                                    1.758 0.078782 .  \nExterior_2ndAsphShn                                    0.742 0.458058    \nExterior_2ndBrk Cmn                                   -0.493 0.621794    \nExterior_2ndBrkFace                                   -0.997 0.319020    \nExterior_2ndCBlock                                    -0.605 0.545428    \nExterior_2ndCmentBd                                    1.772 0.076556 .  \nExterior_2ndHdBoard                                    0.099 0.920983    \nExterior_2ndImStucc                                   -0.522 0.601679    \nExterior_2ndMetalSd                                   -0.510 0.609874    \nExterior_2ndOther                                     -0.579 0.562890    \nExterior_2ndPlywood                                   -0.289 0.772749    \nExterior_2ndPreCast                                       NA       NA    \nExterior_2ndStone                                     -0.592 0.553993    \nExterior_2ndStucco                                     0.338 0.735739    \nExterior_2ndVinylSd                                    0.361 0.718388    \nExterior_2ndWd Sdng                                    0.274 0.784398    \nExterior_2ndWd Shng                                   -0.126 0.899772    \nMas_Vnr_TypeBrkFace                                    1.040 0.298661    \nMas_Vnr_TypeCBlock                                    -2.954 0.003169 ** \nMas_Vnr_TypeNone                                       1.145 0.252373    \nMas_Vnr_TypeStone                                      2.018 0.043745 *  \nMas_Vnr_Area                                           1.587 0.112638    \nExter_QualFair                                         0.854 0.393003    \nExter_QualGood                                        -1.191 0.233646    \nExter_QualTypical                                     -1.773 0.076406 .  \nExter_CondFair                                        -1.204 0.228628    \nExter_CondGood                                        -0.138 0.890571    \nExter_CondPoor                                        -0.859 0.390675    \nExter_CondTypical                                      0.216 0.828689    \nFoundationCBlock                                       0.916 0.359837    \nFoundationPConc                                        1.982 0.047637 *  \nFoundationSlab                                        -0.946 0.344453    \nFoundationStone                                        2.033 0.042119 *  \nFoundationWood                                        -1.060 0.289443    \nBsmt_QualFair                                         -2.222 0.026341 *  \nBsmt_QualGood                                         -2.043 0.041110 *  \nBsmt_QualNo_Basement                                  -0.148 0.882661    \nBsmt_QualPoor                                          0.889 0.374237    \nBsmt_QualTypical                                      -1.471 0.141501    \nBsmt_CondFair                                         -0.024 0.980862    \nBsmt_CondGood                                          0.335 0.737893    \nBsmt_CondNo_Basement                                      NA       NA    \nBsmt_CondPoor                                          0.696 0.486634    \nBsmt_CondTypical                                       0.076 0.939285    \nBsmt_ExposureGd                                        3.688 0.000231 ***\nBsmt_ExposureMn                                       -2.101 0.035758 *  \nBsmt_ExposureNo                                       -2.343 0.019206 *  \nBsmt_ExposureNo_Basement                              -0.437 0.662315    \nBsmtFin_Type_1BLQ                                     -1.002 0.316342    \nBsmtFin_Type_1GLQ                                     -0.673 0.501091    \nBsmtFin_Type_1LwQ                                     -1.114 0.265499    \nBsmtFin_Type_1No_Basement                                 NA       NA    \nBsmtFin_Type_1Rec                                     -0.953 0.340738    \nBsmtFin_Type_1Unf                                     -0.867 0.386164    \nBsmtFin_SF_1                                           0.800 0.423742    \nBsmtFin_Type_2BLQ                                     -1.813 0.069880 .  \nBsmtFin_Type_2GLQ                                      1.486 0.137463    \nBsmtFin_Type_2LwQ                                     -0.800 0.424039    \nBsmtFin_Type_2No_Basement                             -0.753 0.451352    \nBsmtFin_Type_2Rec                                     -1.415 0.157081    \nBsmtFin_Type_2Unf                                     -0.206 0.837056    \nBsmtFin_SF_2                                          -0.677 0.498397    \nBsmt_Unf_SF                                           -6.688 2.75e-11 ***\nTotal_Bsmt_SF                                          9.367  < 2e-16 ***\nHeatingGasA                                            1.259 0.208297    \nHeatingGasW                                            1.605 0.108624    \nHeatingGrav                                            0.199 0.842577    \nHeatingOthW                                            0.548 0.583724    \nHeatingWall                                            1.100 0.271613    \nHeating_QCFair                                        -1.376 0.169074    \nHeating_QCGood                                        -1.381 0.167337    \nHeating_QCPoor                                        -2.849 0.004414 ** \nHeating_QCTypical                                     -4.565 5.23e-06 ***\nCentral_AirY                                           3.304 0.000967 ***\nElectricalFuseF                                       -0.274 0.783879    \nElectricalFuseP                                       -0.165 0.868874    \nElectricalMix                                          1.292 0.196600    \nElectricalSBrkr                                       -0.848 0.396653    \nElectricalUnknown                                      0.358 0.720623    \nFirst_Flr_SF                                          17.794  < 2e-16 ***\nSecond_Flr_SF                                         15.724  < 2e-16 ***\nLow_Qual_Fin_SF                                        4.712 2.58e-06 ***\nGr_Liv_Area                                               NA       NA    \nBsmt_Full_Bath                                         3.402 0.000679 ***\nBsmt_Half_Bath                                         0.524 0.600548    \nFull_Bath                                              4.365 1.32e-05 ***\nHalf_Bath                                              3.387 0.000717 ***\nBedroom_AbvGr                                         -2.255 0.024198 *  \nKitchen_AbvGr                                         -0.936 0.349553    \nKitchen_QualFair                                      -2.942 0.003284 ** \nKitchen_QualGood                                      -3.508 0.000459 ***\nKitchen_QualPoor                                       1.811 0.070212 .  \nKitchen_QualTypical                                   -4.067 4.90e-05 ***\nTotRms_AbvGrd                                          0.712 0.476736    \nFunctionalMaj2                                        -2.734 0.006293 ** \nFunctionalMin1                                         2.153 0.031396 *  \nFunctionalMin2                                         1.477 0.139915    \nFunctionalMod                                          0.503 0.615109    \nFunctionalSal                                         -6.884 7.24e-12 ***\nFunctionalSev                                         -3.499 0.000475 ***\nFunctionalTyp                                          3.236 0.001227 ** \nFireplaces                                             1.999 0.045659 *  \nFireplace_QuFair                                       0.119 0.905376    \nFireplace_QuGood                                       0.635 0.525467    \nFireplace_QuNo_Fireplace                               0.057 0.954809    \nFireplace_QuPoor                                       0.466 0.641365    \nFireplace_QuTypical                                    0.567 0.571075    \nGarage_TypeBasment                                    -0.500 0.616887    \nGarage_TypeBuiltIn                                    -0.338 0.735762    \nGarage_TypeCarPort                                    -1.689 0.091333 .  \nGarage_TypeDetchd                                     -1.203 0.229068    \nGarage_TypeMore_Than_Two_Types                        -1.734 0.083012 .  \nGarage_TypeNo_Garage                                  -0.808 0.418941    \nGarage_FinishNo_Garage                                -0.449 0.653256    \nGarage_FinishRFn                                      -0.071 0.943078    \nGarage_FinishUnf                                       0.763 0.445821    \nGarage_Cars                                            4.026 5.82e-05 ***\nGarage_Area                                            2.160 0.030871 *  \nGarage_QualFair                                       -2.975 0.002953 ** \nGarage_QualGood                                       -2.361 0.018321 *  \nGarage_QualNo_Garage                                      NA       NA    \nGarage_QualPoor                                       -3.184 0.001468 ** \nGarage_QualTypical                                    -2.760 0.005815 ** \nGarage_CondFair                                        1.358 0.174552    \nGarage_CondGood                                        1.571 0.116267    \nGarage_CondNo_Garage                                      NA       NA    \nGarage_CondPoor                                        1.834 0.066708 .  \nGarage_CondTypical                                     1.745 0.081122 .  \nPaved_DrivePartial_Pavement                           -0.395 0.692623    \nPaved_DrivePaved                                       1.475 0.140403    \nWood_Deck_SF                                           3.496 0.000480 ***\nOpen_Porch_SF                                          2.151 0.031555 *  \nEnclosed_Porch                                         3.695 0.000224 ***\nThree_season_porch                                     1.169 0.242474    \nScreen_Porch                                           6.788 1.40e-11 ***\nPool_Area                                             -2.385 0.017170 *  \nPool_QCFair                                            2.230 0.025840 *  \nPool_QCGood                                            2.987 0.002847 ** \nPool_QCNo_Pool                                        -1.760 0.078451 .  \nPool_QCTypical                                         1.736 0.082638 .  \nFenceGood_Wood                                        -0.756 0.449909    \nFenceMinimum_Privacy                                   0.036 0.970997    \nFenceMinimum_Wood_Wire                                -0.214 0.830362    \nFenceNo_Fence                                          0.152 0.879053    \nMisc_FeatureNone                                      -0.028 0.977942    \nMisc_FeatureOthr                                      -0.499 0.617480    \nMisc_FeatureShed                                      -0.140 0.888464    \nMisc_FeatureTenC                                      -1.997 0.045968 *  \nMisc_Val                                               0.667 0.505061    \nMo_Sold                                               -0.115 0.908325    \nYear_Sold                                             -1.025 0.305554    \nSale_TypeCon                                           2.712 0.006723 ** \nSale_TypeConLD                                         1.806 0.071046 .  \nSale_TypeConLI                                        -1.037 0.300059    \nSale_TypeConLw                                         2.461 0.013920 *  \nSale_TypeCWD                                           0.960 0.337372    \nSale_TypeNew                                           1.295 0.195431    \nSale_TypeOth                                           0.941 0.347010    \nSale_TypeVWD                                           0.144 0.885737    \nSale_TypeWD                                            1.034 0.301192    \nSale_ConditionAdjLand                                  5.355 9.31e-08 ***\nSale_ConditionAlloca                                   2.830 0.004689 ** \nSale_ConditionFamily                                   1.627 0.103818    \nSale_ConditionNormal                                   8.574  < 2e-16 ***\nSale_ConditionPartial                                  1.337 0.181496    \nLongitude                                             -1.089 0.276078    \nLatitude                                               0.145 0.885055    \nTime_Since_Remodel                                    -4.187 2.92e-05 ***\nHouse_Age                                             -8.658  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error: 0.0435 on 2627 degrees of freedom\nMultiple R-squared:  0.9453,    Adjusted R-squared:  0.9391 \nF-statistic: 152.9 on 297 and 2627 DF,  p-value: < 2.2e-16\n\n\nNote explain a linear model here?\nA more powerful and flexible set of tools for predictive modeling - tidymodels\nWhen you type library(tidymodels), you load a collection of packages for modeling and machine learning using tidyverse principles. All the packages are designed to be consistent, modular, and to support good modeling practices. The first thing we are going to practice is splitting your data into a training set and a testing set. The tidymodels package rsample has functions that help you specify training and testing sets.\n\nset.seed(42) #so we all get the same results\names_split <- ames_data %>%\n    initial_split(prop = 0.8,\n                  strata = Sale_Price)\n\names_train <- training(ames_split)\names_test <- testing(ames_split)\n\nsaveRDS(ames_train, \"../_models/ames_train.Rds\")\nsaveRDS(ames_test, \"../_models/ames_test.Rds\")\n\nThe code here takes an input data set and puts 80% of it into a training dataset and 20% of it into a testing dataset; it chooses the individual cases so that both sets are balanced in selling price.\n\names_train %>% \n  ggplot(aes(x = log(Sale_Price),  col = \"red\", fill = NULL)) + \n  geom_density() + theme_minimal() +\n  geom_line(data = ames_test,\n            stat = \"density\",\n            col = \"blue\") + theme(legend.position=\"none\")\n\n\n\n\nIn tidymodels, you can preprocess your data using recipes (e.g. for dealing with imbalanced data)\n\names_rec <-\n  recipe(Sale_Price ~ ., data = ames_train) %>%\n  step_other(all_nominal(), threshold = 0.01) %>% #useful when you have some factor levels with very few observations, all_nominal selects both characters and factors, pools infrequently occurring values (frequency less than 0.01) into an \"other\" category\n  step_nzv(all_nominal()) %>% #remove variables that are highly sparse and unbalanced\n  step_dummy(all_nominal(), -all_outcomes()) #create dummy variables for all nominal variables except the outcome variable \n\names_rec\n\nRecipe\nInputs:\n      role #variables\n   outcome          1\n predictor         80\nOperations:\nCollapsing factor levels for all_nominal()\nSparse, unbalanced variable filter on all_nominal()\nDummy variables from all_nominal(), -all_outcomes()\n\n\nThe preprocessing recipe ames_rec has been defined but no values have been estimated.\n\nThe prep() function takes that defined object and computes everything so that the preprocessing steps can be executed. Note that This is done with the training data.\n\n\names_prep <- prep(ames_rec)\n\names_prep\n\nRecipe\nInputs:\n      role #variables\n   outcome          1\n predictor         80\nTraining data contained 2339 data points and no missing data.\nOperations:\nCollapsing factor levels for MS_SubClass, MS_Zoning, Street, Lot_Shape, Util... [trained]\nSparse, unbalanced variable filter removed Street, Alley, Land_Contour, Utilities,... [trained]\nDummy variables from MS_SubClass, MS_Zoning, Lot_Shape, Lot_Config, Neighborho... [trained]\n\n\nThe bake() and juice() functions both return data, not a preprocessing recipe object.  - Thebake()function takes a prepped recipe (one that has had all quantities estimated from training data) and applies it tonew_data`. That new_data could be the training data again or it could be the testing data (with the TRAINING parameters)\n\names_test_proc <- bake(ames_prep, new_data = ames_test)\n\n\nThe juice() function is a nice little shortcut. When we juice() the recipe, we squeeze that training data back out, transformed in the ways we specified. Let’s compare the bake() and juice() outputs:\n\n\nbake(ames_prep, new_data = ames_train)\n\n# A tibble: 2,339 × 198\n   Lot_Frontage Lot_Area Mas_V…¹ BsmtF…² BsmtF…³ Bsmt_…⁴ Total…⁵ First…⁶ Secon…⁷\n          <dbl>    <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <int>   <int>\n 1           70     8400       0       1      78       0     882     882       0\n 2           70    10500       0       1       0     432     864     864       0\n 3           53     4043       0       1       0     709    1069    1069       0\n 4           24     2280       0       7       0     836     836     836       0\n 5           55     7892       0       7       0     918     918     918       0\n 6           50     7175       0       1     121       0     744     752       0\n 7           70     9800       0       7       0     816     816    1012       0\n 8           68     8930       0       5       0       0       0    1318     584\n 9            0     9819      31       2       0     432     882     900       0\n10            0     6897       0       1       0     381    1040    1040       0\n# … with 2,329 more rows, 189 more variables: Low_Qual_Fin_SF <int>,\n#   Gr_Liv_Area <int>, Bsmt_Full_Bath <dbl>, Bsmt_Half_Bath <dbl>,\n#   Full_Bath <int>, Half_Bath <int>, Bedroom_AbvGr <int>, Kitchen_AbvGr <int>,\n#   TotRms_AbvGrd <int>, Fireplaces <int>, Garage_Cars <dbl>,\n#   Garage_Area <dbl>, Wood_Deck_SF <int>, Open_Porch_SF <int>,\n#   Enclosed_Porch <int>, Three_season_porch <int>, Screen_Porch <int>,\n#   Pool_Area <int>, Misc_Val <int>, Mo_Sold <int>, Year_Sold <int>, …\n\njuice(ames_prep) \n\n# A tibble: 2,339 × 198\n   Lot_Frontage Lot_Area Mas_V…¹ BsmtF…² BsmtF…³ Bsmt_…⁴ Total…⁵ First…⁶ Secon…⁷\n          <dbl>    <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <int>   <int>\n 1           70     8400       0       1      78       0     882     882       0\n 2           70    10500       0       1       0     432     864     864       0\n 3           53     4043       0       1       0     709    1069    1069       0\n 4           24     2280       0       7       0     836     836     836       0\n 5           55     7892       0       7       0     918     918     918       0\n 6           50     7175       0       1     121       0     744     752       0\n 7           70     9800       0       7       0     816     816    1012       0\n 8           68     8930       0       5       0       0       0    1318     584\n 9            0     9819      31       2       0     432     882     900       0\n10            0     6897       0       1       0     381    1040    1040       0\n# … with 2,329 more rows, 189 more variables: Low_Qual_Fin_SF <int>,\n#   Gr_Liv_Area <int>, Bsmt_Full_Bath <dbl>, Bsmt_Half_Bath <dbl>,\n#   Full_Bath <int>, Half_Bath <int>, Bedroom_AbvGr <int>, Kitchen_AbvGr <int>,\n#   TotRms_AbvGrd <int>, Fireplaces <int>, Garage_Cars <dbl>,\n#   Garage_Area <dbl>, Wood_Deck_SF <int>, Open_Porch_SF <int>,\n#   Enclosed_Porch <int>, Three_season_porch <int>, Screen_Porch <int>,\n#   Pool_Area <int>, Misc_Val <int>, Mo_Sold <int>, Year_Sold <int>, …\n\n\nIt is the same as bake(ames_rep, new_data = ames_train) and is just a shortcut that we are going to use later.\n\n\n\n\n\n\nChallenge X\n\n\n\nDoes it make sense to apply these preprocessing steps to the test set?\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nNo, it doesn’t. You want the set test to look like new data that your model will see in the future, so you don’t want to mess with the class balance there; you want to see how your model will perform on imbalanced data, even if you have trained it on artificially balanced data.\n\n\n\nBuild the model\nIn tidymodels, you specify models using three concepts.\n\nModel type differentiates models such as logistic regression, decision tree models, and so forth;\nModel mode includes common options like regression and classification, some model types support either of these while some only have one mode;\nModel engine is the computational tool which will be used to fit the model.\n\nWe will specify the model using the parsnip package - Many functions have different interfaces and arguments names and parsnip standardizes the interface for fitting models as well as the return values.\n\n#a linear regression model specification\names_model <- linear_reg() %>% #pick a model\n  set_engine(\"lm\")           #set the engine\n                             #set_mode(\"regression\") we don't need this as the model linear_reg() only does regression\n\n#view model properties\names_model\n\nLinear Regression Model Specification (regression)\nComputational engine: lm \n\n\nNow we are ready to train our model object on the training data. We can do this using the fit() function from the parsnip package. The fit() function takes the following arguments:\n\na parnsip model object specification;\na model formula\na data frame with the training data\n\nThe code below trains our linear regression model on the prepped training data. In our formula, we have specified that Sale_Price is the response variable and included all the rest as our predictor variables.\n\names_fit <- ames_model %>%\n  fit(Sale_Price ~ .,\n      data=juice(ames_prep))\n\n# View lm_fit properties\names_fit\n\nparsnip model object\nCall:\nstats::lm(formula = Sale_Price ~ ., data = data)\nCoefficients:\n                                          (Intercept)  \n                                           -1.448e+01  \n                                         Lot_Frontage  \n                                            3.161e-05  \n                                             Lot_Area  \n                                            6.779e-07  \n                                         Mas_Vnr_Area  \n                                            1.931e-05  \n                                         BsmtFin_SF_1  \n                                            1.290e-02  \n                                         BsmtFin_SF_2  \n                                           -1.424e-05  \n                                          Bsmt_Unf_SF  \n                                           -2.190e-05  \n                                        Total_Bsmt_SF  \n                                            6.942e-05  \n                                         First_Flr_SF  \n                                            1.134e-04  \n                                        Second_Flr_SF  \n                                            1.202e-04  \n                                      Low_Qual_Fin_SF  \n                                            9.236e-05  \n                                          Gr_Liv_Area  \n                                                   NA  \n                                       Bsmt_Full_Bath  \n                                            8.940e-03  \n                                       Bsmt_Half_Bath  \n                                            3.637e-03  \n                                            Full_Bath  \n                                            1.358e-02  \n                                            Half_Bath  \n                                            1.273e-02  \n                                        Bedroom_AbvGr  \n                                           -5.096e-03  \n                                        Kitchen_AbvGr  \n                                           -1.524e-02  \n                                        TotRms_AbvGrd  \n                                            6.604e-04  \n                                           Fireplaces  \n                                            7.531e-03  \n                                          Garage_Cars  \n                                            1.166e-02  \n                                          Garage_Area  \n                                            2.574e-05  \n                                         Wood_Deck_SF  \n                                            2.225e-05  \n                                        Open_Porch_SF  \n                                            2.799e-05  \n                                       Enclosed_Porch  \n                                            5.423e-05  \n                                   Three_season_porch  \n                                            2.912e-05  \n                                         Screen_Porch  \n                                            9.985e-05  \n                                            Pool_Area  \n                                           -5.687e-06  \n                                             Misc_Val  \n                                            2.300e-06  \n                                              Mo_Sold  \n                                           -1.482e-04  \n                                            Year_Sold  \n                                           -1.458e-03  \n                                            Longitude  \n                                           -3.806e-01  \n                                             Latitude  \n                                           -3.215e-01  \n                                   Time_Since_Remodel  \n                                           -2.737e-04  \n                                            House_Age  \n                                           -7.079e-04  \n                 MS_SubClass_One_Story_1945_and_Older  \n                                           -2.686e-02  \n     MS_SubClass_One_and_Half_Story_Finished_All_Ages  \n                                            2.207e-02  \n                 MS_SubClass_Two_Story_1946_and_Newer  \n                                           -2.001e-02  \n                 MS_SubClass_Two_Story_1945_and_Older  \n                                            9.685e-03  \n                      MS_SubClass_Split_or_Multilevel  \n                                           -2.151e-02  \n                              MS_SubClass_Split_Foyer  \n                                            1.229e-03  \n               MS_SubClass_Duplex_All_Styles_and_Ages  \n                                           -2.907e-02  \n             MS_SubClass_One_Story_PUD_1946_and_Newer  \n                                            1.251e-02  \n             MS_SubClass_Two_Story_PUD_1946_and_Newer  \n                                           -3.518e-02  \nMS_SubClass_Two_Family_conversion_All_Styles_and_Ages  \n                                            6.505e-03  \n                                    MS_SubClass_other  \n                                           -6.164e-03  \n                    MS_Zoning_Residential_Low_Density  \n                                           -7.351e-03  \n                 MS_Zoning_Residential_Medium_Density  \n                                           -1.452e-02  \n                                      MS_Zoning_other  \n                                           -3.692e-02  \n                         Lot_Shape_Slightly_Irregular  \n                                           -2.316e-04  \n                       Lot_Shape_Moderately_Irregular  \n                                            1.193e-02  \n                                      Lot_Shape_other  \n                                           -4.776e-03  \n                                   Lot_Config_CulDSac  \n                                            6.232e-03  \n                                       Lot_Config_FR2  \n                                           -9.691e-03  \n                                    Lot_Config_Inside  \n                                           -2.016e-03  \n                                     Lot_Config_other  \n                                           -6.198e-03  \n                           Neighborhood_College_Creek  \n                                           -2.591e-02  \n                                Neighborhood_Old_Town  \n                                           -2.514e-02  \n                                 Neighborhood_Edwards  \n                                           -3.412e-02  \n                                Neighborhood_Somerset  \n                                            3.029e-02  \n                      Neighborhood_Northridge_Heights  \n                                            2.961e-02  \n                                 Neighborhood_Gilbert  \n                                            6.782e-03  \n                                  Neighborhood_Sawyer  \n                                           -1.014e-02  \n                          Neighborhood_Northwest_Ames  \n                                           -3.826e-04  \n                             Neighborhood_Sawyer_West  \n                                           -2.382e-02  \n                                Neighborhood_Mitchell  \n                                           -1.106e-02  \n                               Neighborhood_Brookside  \n                                            3.339e-03  \n                                Neighborhood_Crawford  \n                                            2.988e-02  \n                  Neighborhood_Iowa_DOT_and_Rail_Road  \n                                           -3.378e-02  \n                              Neighborhood_Timberland  \n                                           -1.025e-02  \n                              Neighborhood_Northridge  \n                                            2.538e-02  \n                             Neighborhood_Stone_Brook  \n                                            5.210e-02  \n Neighborhood_South_and_West_of_Iowa_State_University  \n                                           -1.952e-02  \n                             Neighborhood_Clear_Creek  \n                                           -2.654e-03  \n                          Neighborhood_Meadow_Village  \n                                           -4.859e-02  \n                                   Neighborhood_other  \n                                            1.441e-02  \n                                    Condition_1_Feedr  \n                                            6.034e-03  \n                                     Condition_1_Norm  \n                                            2.435e-02  \n                                     Condition_1_PosN  \n                                            2.818e-02  \n                                     Condition_1_RRAn  \n                                            3.760e-03  \n                                    Condition_1_other  \n                                            1.799e-02  \n                                   Bldg_Type_TwoFmCon  \n                                           -1.346e-02  \n                                     Bldg_Type_Duplex  \n                                                   NA  \n                                      Bldg_Type_Twnhs  \n                                           -5.171e-02  \n                                     Bldg_Type_TwnhsE  \n                                           -3.523e-02  \n                                House_Style_One_Story  \n                                            2.208e-02  \n                                   House_Style_SFoyer  \n                                            2.896e-02  \n                                     House_Style_SLvl  \n                                            4.152e-02  \n                                House_Style_Two_Story  \n                                            2.660e-02  \n                                    House_Style_other  \n                                            3.347e-02  \n                           Overall_Qual_Below_Average  \n                                            8.813e-04  \n                                 Overall_Qual_Average  \n                                            2.261e-02  \n                           Overall_Qual_Above_Average  \n                                            3.186e-02  \n                                    Overall_Qual_Good  \n                                            4.078e-02  \n                               Overall_Qual_Very_Good  \n                                            5.968e-02  \n                               Overall_Qual_Excellent  \n                                            6.342e-02  \n                                   Overall_Qual_other  \n                                            9.049e-03  \n                           Overall_Cond_Below_Average  \n                                            5.211e-02  \n                                 Overall_Cond_Average  \n                                            7.983e-02  \n                           Overall_Cond_Above_Average  \n                                            9.348e-02  \n                                    Overall_Cond_Good  \n                                            1.122e-01  \n                               Overall_Cond_Very_Good  \n                                            1.161e-01  \n                               Overall_Cond_Excellent  \n                                            1.355e-01  \n                                   Overall_Cond_other  \n                                           -8.610e-02  \n                                       Roof_Style_Hip  \n                                           -2.757e-03  \n                                     Roof_Style_other  \n                                           -4.104e-03  \n                                 Exterior_1st_BrkFace  \n                                            4.159e-02  \n                                 Exterior_1st_CemntBd  \n                                           -4.784e-02  \n                                 Exterior_1st_HdBoard  \n                                            1.943e-03  \n                                 Exterior_1st_MetalSd  \n                                            1.556e-02  \n                                 Exterior_1st_Plywood  \n                                            4.952e-03  \n                                  Exterior_1st_Stucco  \n                                            4.652e-03  \n                                 Exterior_1st_VinylSd  \n                                           -7.257e-03  \n                                 Exterior_1st_Wd.Sdng  \n                                            7.015e-03  \n                                 Exterior_1st_WdShing  \n                                           -2.216e-03  \n                                   Exterior_1st_other  \n                                            1.974e-02  \n                                 Exterior_2nd_BrkFace  \n                                            4.213e-03  \n                                 Exterior_2nd_CmentBd  \n                                            8.059e-02  \n                                 Exterior_2nd_HdBoard  \n                                            2.276e-02  \n                                 Exterior_2nd_MetalSd  \n                                            1.999e-02  \n                                 Exterior_2nd_Plywood  \n                                            2.058e-02  \n                                  Exterior_2nd_Stucco  \n                                            3.233e-02  \n                                 Exterior_2nd_VinylSd  \n                                            3.560e-02  \n                                 Exterior_2nd_Wd.Sdng  \n                                            2.451e-02  \n                                 Exterior_2nd_Wd.Shng  \n                                            2.889e-02  \n                                   Exterior_2nd_other  \n                                            2.946e-02  \n                                    Mas_Vnr_Type_None  \n                                            1.321e-03  \n                                   Mas_Vnr_Type_Stone  \n                                            8.239e-03  \n                                   Mas_Vnr_Type_other  \n                                           -1.198e-02  \n                                      Exter_Qual_Fair  \n                                           -5.139e-02  \n                                      Exter_Qual_Good  \n                                           -3.455e-02  \n                                   Exter_Qual_Typical  \n                                           -4.129e-02  \n                                      Exter_Cond_Good  \n                                            2.660e-02  \n                                   Exter_Cond_Typical  \n                                            3.470e-02  \n                                     Exter_Cond_other  \n                                            5.374e-02  \n                                    Foundation_CBlock  \n                                            2.350e-03  \n                                     Foundation_PConc  \n                                            1.077e-02  \n                                      Foundation_Slab  \n                                            1.971e-02  \n                                     Foundation_other  \n                                            2.213e-02  \n                                       Bsmt_Qual_Fair  \n                                           -2.658e-02  \n                                       Bsmt_Qual_Good  \n                                           -1.361e-02  \n                                Bsmt_Qual_No_Basement  \n                                           -9.456e-02  \n                                    Bsmt_Qual_Typical  \n                                           -1.491e-02  \n                                      Bsmt_Qual_other  \n                                           -2.968e-02  \n                                     Bsmt_Exposure_Gd  \n                                            2.299e-02  \n                                     Bsmt_Exposure_Mn  \n                                           -3.651e-03  \n                                     Bsmt_Exposure_No  \n                                           -6.672e-03  \n                            Bsmt_Exposure_No_Basement  \n                                           -3.846e-03  \n                                   BsmtFin_Type_1_BLQ  \n                                           -1.751e-02  \n                                   BsmtFin_Type_1_GLQ  \n                                           -2.411e-02  \n                                   BsmtFin_Type_1_LwQ  \n                                           -5.087e-02  \n                           BsmtFin_Type_1_No_Basement  \n                                                   NA  \n                                   BsmtFin_Type_1_Rec  \n                                           -7.650e-02  \n                                   BsmtFin_Type_1_Unf  \n                                           -8.377e-02  \n                                      Heating_QC_Fair  \n                                           -2.564e-02  \n                                      Heating_QC_Good  \n                                           -6.722e-03  \n                                   Heating_QC_Typical  \n                                           -1.255e-02  \n                                     Heating_QC_other  \n                                           -7.701e-01  \n                                        Central_Air_Y  \n                                            2.323e-02  \n                                     Electrical_FuseF  \n                                           -5.329e-03  \n                                     Electrical_SBrkr  \n                                           -3.638e-03  \n                                     Electrical_other  \n                                            1.349e-02  \n                                    Kitchen_Qual_Fair  \n                                           -3.089e-02  \n                                    Kitchen_Qual_Good  \n                                           -2.533e-02  \n                                 Kitchen_Qual_Typical  \n                                           -3.035e-02  \n                                   Kitchen_Qual_other  \n                                                   NA  \n                                    Fireplace_Qu_Fair  \n                                            6.797e-03  \n                                    Fireplace_Qu_Good  \n                                            1.592e-02  \n                            Fireplace_Qu_No_Fireplace  \n                                            8.656e-03  \n                                    Fireplace_Qu_Poor  \n                                            2.672e-03  \n                                 Fireplace_Qu_Typical  \n                                            1.160e-02  \n                                  Garage_Type_Basment  \n                                           -9.485e-03  \n                                  Garage_Type_BuiltIn  \n                                           -1.869e-03  \n                                   Garage_Type_Detchd  \n                                           -3.133e-03  \n                                Garage_Type_No_Garage  \n                                           -2.655e-02  \n                                    Garage_Type_other  \n                                           -2.778e-02  \n                              Garage_Finish_No_Garage  \n                                            4.623e-02  \n                                    Garage_Finish_RFn  \n                                           -3.862e-03  \n                                    Garage_Finish_Unf  \n                                           -4.798e-04  \n                                Garage_Qual_No_Garage  \n                                                   NA  \n                                  Garage_Qual_Typical  \n                                            9.537e-03  \n                                    Garage_Qual_other  \n                                            2.430e-02  \n                                Garage_Cond_No_Garage  \n                                                   NA  \n                                  Garage_Cond_Typical  \n                                            2.296e-02  \n                                    Garage_Cond_other  \n                                            2.883e-02  \n                         Paved_Drive_Partial_Pavement  \n                                           -3.690e-03  \n                                    Paved_Drive_Paved  \n                                            4.401e-03  \n                                      Fence_Good_Wood  \n                                           -6.140e-03  \n                                Fence_Minimum_Privacy  \n                                            2.747e-03  \n                                       Fence_No_Fence  \n                                            1.824e-03  \n                                          Fence_other  \n                                            6.839e-03  \n                                        Sale_Type_New  \n                                            3.837e-02  \n                                        Sale_Type_WD.  \n                                            1.940e-03  \n                                      Sale_Type_other  \n                                            2.022e-02  \n                                Sale_Condition_Family  \n                                            2.262e-02  \n                                Sale_Condition_Normal  \n                                            4.335e-02  \n                               Sale_Condition_Partial  \n                                            2.285e-02  \n                                 Sale_Condition_other  \n                                            4.515e-02  \n\n\nTo obtain the detailed results from our trained linear regression model in a data frame, we can use the tidy() and glance() functions directly on our trained parsnip model, ames_fit. - The tidy() function takes a linear regression object and returns a data frame of the estimated model coefficients and their associated F-statistics and p-values; - The glance() function will return performance metrics obtained on the training data such as the R2 value (r.squared) and the RMSE (sigma). - We can also use the vip() function to plot the variable importance for each predictor in our model. The importance value is determined based on the F-statistics and estimate coefficents in our trained model object.\n\n# Data frame of estimated coefficients\ntidy(ames_fit)\n\n# A tibble: 198 × 5\n   term               estimate    std.error statistic  p.value\n   <chr>                 <dbl>        <dbl>     <dbl>    <dbl>\n 1 (Intercept)   -14.5         21.4            -0.675 5.00e- 1\n 2 Lot_Frontage    0.0000316    0.0000364       0.868 3.85e- 1\n 3 Lot_Area        0.000000678  0.000000154     4.40  1.12e- 5\n 4 Mas_Vnr_Area    0.0000193    0.00000963      2.01  4.50e- 2\n 5 BsmtFin_SF_1    0.0129       0.0110          1.17  2.42e- 1\n 6 BsmtFin_SF_2   -0.0000142    0.00000698     -2.04  4.13e- 2\n 7 Bsmt_Unf_SF    -0.0000219    0.00000473     -4.63  3.82e- 6\n 8 Total_Bsmt_SF   0.0000694    0.00000769      9.03  3.65e-19\n 9 First_Flr_SF    0.000113     0.00000770     14.7   7.55e-47\n10 Second_Flr_SF   0.000120     0.00000827     14.5   9.84e-46\n# … with 188 more rows\n\n# Performance metrics on training data\nglance(ames_fit)\n\n# A tibble: 1 × 12\n  r.squared adj.r.sq…¹  sigma stati…² p.value    df logLik    AIC    BIC devia…³\n      <dbl>      <dbl>  <dbl>   <dbl>   <dbl> <dbl>  <dbl>  <dbl>  <dbl>   <dbl>\n1     0.935      0.929 0.0476    161.       0   191  3905. -7424. -6313.    4.86\n# … with 2 more variables: df.residual <int>, nobs <int>, and abbreviated\n#   variable names ¹​adj.r.squared, ²​statistic, ³​deviance\n\n# Plot variable importance\nvip(ames_fit)\n\n\n\n\n#Evaluating the model\nTo assess the accuracy of our trained linear regression model, ames_fit, we must use it to make predictions on our test data, ames_test_proc. This is done with the predict() function from parnsip. This function takes two important arguments:\n\na trained parnsip model object;\nnew_data for which to generate predictions.\n\nThe code below uses the predict() function to generate a data frame with a single column, .pred, which contains the predicted Sale Price values on the ames_test data.\n\npredict(ames_fit, new_data = ames_test_proc)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 586 × 1\n   .pred\n   <dbl>\n 1  5.04\n 2  5.22\n 3  5.39\n 4  5.14\n 5  5.23\n 6  4.99\n 7  4.99\n 8  4.98\n 9  5.14\n10  5.76\n# … with 576 more rows\n\n\nWarning: prediction from a rank-deficient fit may be misleading\nOne reason this warning occurs is that you have more model parameters than observations in the dataset. We refer to this as high dimensional data. With high dimensional data, it becomes impossible to find a model that can describe the relationship between the predictor variables and the response variable because we don’t have enough observations to train the model on. The easiest way to resolve this issue is to use a simpler model with less coefficients to estimate.We are not worrying about this today.\nGenerally it’s best to combine the test data set and the predictions into a single data frame. We create a data frame with the predictions on the ames_test data and then use bind_cols() to add the ames_test data to the results.\n\names_test_results <- predict(ames_fit, new_data = ames_test_proc) %>% \n  bind_cols(ames_test_proc)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n# View results\names_test_results\n\n# A tibble: 586 × 199\n   .pred Lot_F…¹ Lot_A…² Mas_V…³ BsmtF…⁴ BsmtF…⁵ Bsmt_…⁶ Total…⁷ First…⁸ Secon…⁹\n   <dbl>   <dbl>   <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <int>   <int>\n 1  5.04      80   11622       0       6     144     270     882     896       0\n 2  5.22      81   14267     108       1       0     406    1329    1329       0\n 3  5.39      88   11394     350       3       0     411    1856    1856       0\n 4  5.14      65    8450       0       2       0     281    1056    1056       0\n 5  5.23      26    5858       0       3       0     354    1405    1337       0\n 6  4.99      21    1680     504       6       0     327     483     483     504\n 7  4.99      21    1680     492       6       0     225     525     525     567\n 8  4.98      21    1680     381       7       0     525     525     525     567\n 9  5.14      24    2280       0       1       0     341     855     855     601\n10  5.76     110   14300    1095       3       0    1473    2846    2696       0\n# … with 576 more rows, 189 more variables: Low_Qual_Fin_SF <int>,\n#   Gr_Liv_Area <int>, Bsmt_Full_Bath <dbl>, Bsmt_Half_Bath <dbl>,\n#   Full_Bath <int>, Half_Bath <int>, Bedroom_AbvGr <int>, Kitchen_AbvGr <int>,\n#   TotRms_AbvGrd <int>, Fireplaces <int>, Garage_Cars <dbl>,\n#   Garage_Area <dbl>, Wood_Deck_SF <int>, Open_Porch_SF <int>,\n#   Enclosed_Porch <int>, Three_season_porch <int>, Screen_Porch <int>,\n#   Pool_Area <int>, Misc_Val <int>, Mo_Sold <int>, Year_Sold <int>, …\n\n\nNow we have the model results and the test data in a single data frame.\nCalculating rmse and rsq on the Test Data\nTo obtain the rmse and rsq values on our test set results, we can use the rmse() and rsq() functions. Both functions take the following arguments:\n\na data frame with columns that have the true values and predictions;\nthe column with the true response values;\nthe column with predicted values.\n\nIn the examples below we pass our ames_test_results to these functions to obtain these values for our test set. Results are always returned as a data frame with the following columns: .metric, .estimator, and .estimate.\n\n#RMSE on test set\ntest_rmse <- rmse(ames_test_results, \n     truth = Sale_Price,\n     estimate = .pred)\n\n#rsq on test set\ntest_rsq<- rsq(ames_test_results,\n    truth = Sale_Price,\n    estimate = .pred)\n\n\n\n\n\n\n\nChallenge X\n\n\n\nWe mentioned earlier that the bake() function takes a prepped recipe (ames_prep) and applies it to new_data. The new_data could be the training data again or it could be the testing data. We just evaluated our model on the test data, let’s try to apply the bake() and predict() functions on the training data and compare the results.\nInstructions\n\n#bake() training data\n\n#predict() selling price on the training data\n\n#combine the training data set and the predictions into a single data frame\n\n#RMSE on training set\n\n#rsq on training set\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n#bake() training data\names_train_proc <- bake(ames_prep, new_data = ames_train)\n#predict() selling price on the training data\names_train_results <-predict(ames_fit, new_data = ames_train_proc)\n#combine the training data set and the predictions into a single data frame\names_train_results <- ames_train_results %>%\n  bind_cols(ames_train_proc)\n#RMSE on training set\ntrain_rmse <- rmse(ames_train_results, \n     truth = Sale_Price,\n     estimate = .pred)\n#rsq on training set\ntrain_rsq <- rsq(ames_train_results,\n    truth = Sale_Price,\n    estimate = .pred)\n\n\n\n\nLet’s have a look at all the metrics for both our training and test datasets:\n\n#plot metrics for training and test datasets\ntrain_rsq %>%\n  mutate(dataset = \"training\") %>%\n  bind_rows(train_rmse %>%\n              mutate(dataset = \"training\")) %>%\n  bind_rows(test_rsq %>%\n              mutate(dataset = \"test\") %>%\n              bind_rows(test_rmse %>%\n                          mutate(dataset = \"test\")))\n\n# A tibble: 4 × 4\n  .metric .estimator .estimate dataset \n  <chr>   <chr>          <dbl> <chr>   \n1 rsq     standard      0.935  training\n2 rmse    standard      0.0456 training\n3 rsq     standard      0.862  test    \n4 rmse    standard      0.0647 test    \n\n\nIf we look at the testing data, the rmse is higher than the training data. Our training data is not giving us a good idea of how our model is going to perform. In this situation, our algorithm fits our existing data very well, but doesn’t generalise well on new data.\nLet’s visualise the situation with an R2 plot:\n\names_test_results %>%\n  mutate(train = \"testing\") %>%\n  bind_rows(ames_train_results %>%\n              mutate(train = \"training\")) %>%\n  ggplot(aes(Sale_Price, .pred, color = train)) +\n  geom_abline(intercept = 0, slope = 1, color = \"black\", size = 0.5, linetype=\"dotted\") +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~train) +\n  labs(\n    x = \"Actual Selling Price\",\n    y = \"Predicted Selling Price\",\n    color = \"Test/Training data\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nThis is a plot that can be used for any regression model. It plots the actual values (Sale Prices) versus the model predictions (.pred) as a scatter plot. It also plot the line y = x through the origin. This line is a visually representation of the perfect model where all predicted values are equal to the true values in the test set. The farther the points are from this line, the worse the model fit. The reason this plot is called an R2 plot, is because the R2 is the squared correlation between the true and predicted values, which are plotted as paired in the plot.\nResampling\nWe made not such a great decision in the previous section; we expected the model evaluated once on the whole training set to help us understand something about how it would perform on new data. Fortunately, we have some options. We can resample the training set to produce an estimate of how the model will perform.The idea of resampling is to create simulated data sets that can be used to estimate the performance of your model, say, because you want to compare models. You can create these resampled data sets instead of using either your training set (which can give overly optimistic results, especially for powerful ML algorithms) or your testing set (which is extremely valuable and can only be used once or at most twice). One of these resampling methods is cross-validation.\nCross-validation means taking your training set and randomly dividing it up evenly into subsets, sometimes called “folds”. A fold here means a group or subset or partition.\nYou use one of the folds for validation and the rest for training, then you repeat these steps with all the subsets and combine the results, usually by taking the mean. Cross-validation allows you to get a more accurate estimate of how your model will perform on new data.\n\n\n\n\n\n\nChallenge X\n\n\n\nWhen you implement 10-fold cross-validation repeated 5 times, you:\n\nrandomly divide your training data into 50 subsets and train on 49 at a time (assessing on the other subset), iterating through all 50 subsets for assessment.\nrandomly divide your training data into 10 subsets and train on 9 at a time (assessing on the other subset), iterating through all 10 subsets for assessment. Then you repeat that process 5 times.\nrandomly divide your training data into 5 subsets and train on 4 at a time (assessing on the other subset), iterating through all 5 subsets. Then you repeat that process 10 times.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nSimulations and practical experience show that 10-fold cross-validation repeated 5 times is a great resampling approach for many situations. This approach involves randomly dividing your training data into 10 folds, or subsets or groups, and training on only 9 while using the other fold for assessment. You iterate through all 10 folds being used for assessment; this is one round of cross-validation. You can then repeat the whole process multiple, perhaps 5, times.\n\n\n\n\names_folds <- vfold_cv(ames_train, v=10, repeats = 5)\n\nglimpse(ames_folds)\n\nRows: 50\nColumns: 3\n$ splits <list> [<vfold_split[2105 x 234 x 2339 x 81]>], [<vfold_split[2105 x …\n$ id     <chr> \"Repeat1\", \"Repeat1\", \"Repeat1\", \"Repeat1\", \"Repeat1\", \"Repeat1…\n$ id2    <chr> \"Fold01\", \"Fold02\", \"Fold03\", \"Fold04\", \"Fold05\", \"Fold06\", \"Fo…\n\n\nIn the next steps, we won’t not use prep() or bake(). The ames_rec recipe will be automatically applied in a later step using the workflow() and last_fit() functions.\nCreate a Workflow\nIn the previous section, we trained a linear regression model to the housing data step-by-step. In this section, we will go over how to combine all of the modeling steps into a single workflow. The workflow package was designed to combine models and recipes into a single object. To create a workflow, we start with workflow() to create an empty workflow and then add out model and recipe with add_model() and add_recipe().\n\names_wf <- workflow() %>%\n  add_model(ames_model) %>% \n  add_recipe(ames_rec)\n\names_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n── Preprocessor ────────────────────────────────────────────────────────────────\n3 Recipe Steps\n• step_other()\n• step_nzv()\n• step_dummy()\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\nComputational engine: lm \n\n\nOnce we have created a set of resamples, we can use the function fit_resamples() to fit a model to each resample and compute performance metrics for each.\n\nset.seed(234)\names_res <- ames_wf %>%\n  fit_resamples(\n    ames_folds,\n    control = control_resamples(save_pred = TRUE)\n  )\n\n! Fold01, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold02, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold03, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold04, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold05, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold06, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold07, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold08, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold09, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold10, Repeat1: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold01, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold02, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold03, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold04, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold05, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold06, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold07, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold08, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold09, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold10, Repeat2: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold01, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold02, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold03, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold04, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold05, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold06, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold07, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold08, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold09, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold10, Repeat3: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold01, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold02, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold03, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold04, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold05, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold06, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold07, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold08, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold09, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold10, Repeat4: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold01, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold02, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold03, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold04, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold05, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold06, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold07, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold08, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold09, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n\n! Fold10, Repeat5: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\nglimpse(ames_res)\n\nRows: 50\nColumns: 6\n$ splits       <list> [<vfold_split[2105 x 234 x 2339 x 81]>], [<vfold_split[2…\n$ id           <chr> \"Repeat1\", \"Repeat1\", \"Repeat1\", \"Repeat1\", \"Repeat1\", \"R…\n$ id2          <chr> \"Fold01\", \"Fold02\", \"Fold03\", \"Fold04\", \"Fold05\", \"Fold06…\n$ .metrics     <list> [<tbl_df[2 x 4]>], [<tbl_df[2 x 4]>], [<tbl_df[2 x 4]>],…\n$ .notes       <list> [<tbl_df[1 x 3]>], [<tbl_df[1 x 3]>], [<tbl_df[1 x 3]>],…\n$ .predictions <list> [<tbl_df[234 x 4]>], [<tbl_df[234 x 4]>], [<tbl_df[234 x…\n\nsaveRDS(ames_res, \"../_models/ames_res.rds\")\n\nThe column .metric contains the performance statistics created from the 10 assessment sets. These can be manually unnested but the tune package contains a number of simple functions that can extract these data:\n\n# Obtain performance metrics on resampled training data\names_res %>% collect_metrics()\n\n# A tibble: 2 × 6\n  .metric .estimator   mean     n std_err .config             \n  <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   0.0537    50 0.00116 Preprocessor1_Model1\n2 rsq     standard   0.909     50 0.00372 Preprocessor1_Model1\n\n\n\n\nvfold_cv() creates folds for cross-validation;\n\nfit_resamples() fits models to resamples;\n\ncollect_metrics() obtains performance metrics from the results.\n\nNotice that now we have a realistic estimate from the training data that is closer to the testing data!\nIf we wanted to try different model types for this data set, we could more confidently compare performance metrics computed using resampling to choose between models. Also, remember that at the end of our project, we return to our test set to estimate final model performance.\nLet’s use the last_fit() function to evaluate once on the testing set:\n\n#Final fit on test dataset\names_final <- ames_wf %>%\n  last_fit(ames_split)\n\n! train/test split: preprocessor 1/1, model 1/1 (predictions): prediction from a rank-deficient fit may be misleading\n\n# Obtain performance metrics on test data\ncollect_metrics(ames_final)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard      0.0647 Preprocessor1_Model1\n2 rsq     standard      0.862  Preprocessor1_Model1\n\n\nThe R-squared (rsq) and root mean squared error (RMSE) metrics are similar for both the training and testing datasets in our linear regression model. This is a good sign that the model is not over-fitting and can be used for making predictions on new data.\nWe can save the test set predictions by using the collect_predictions() function. This function returns a data frame which will have the response variables values from the test set and a column named .pred with the model predictions.\n\n# Obtain test set predictions data frame\names_results_final <- ames_final %>% \n                 collect_predictions()\n# View results\names_results_final\n\n# A tibble: 586 × 5\n   id               .pred  .row Sale_Price .config             \n   <chr>            <dbl> <int>      <dbl> <chr>               \n 1 train/test split  5.04     2       5.02 Preprocessor1_Model1\n 2 train/test split  5.22     3       5.24 Preprocessor1_Model1\n 3 train/test split  5.39    18       5.60 Preprocessor1_Model1\n 4 train/test split  5.14    26       5.15 Preprocessor1_Model1\n 5 train/test split  5.23    29       5.26 Preprocessor1_Model1\n 6 train/test split  4.99    30       4.98 Preprocessor1_Model1\n 7 train/test split  4.99    31       5.02 Preprocessor1_Model1\n 8 train/test split  4.98    32       4.94 Preprocessor1_Model1\n 9 train/test split  5.14    34       5.18 Preprocessor1_Model1\n10 train/test split  5.76    47       5.70 Preprocessor1_Model1\n# … with 576 more rows\n\n\nFinally, let’s use this data frame to make an R2 plot to visualize our model performance on the test data set:\n\nggplot(data = ames_results_final,\n       mapping = aes(x = .pred, y = Sale_Price)) +\n  geom_point(color = '#006EA1', alpha = 0.25) +\n  geom_abline(intercept = 0, slope = 1, color = 'black', size=0.5, linetype=\"dotted\") +\n  labs(title = 'Linear Regression Results - Ames Test Set',\n       x = 'Predicted Selling Price',\n       y = 'Actual Selling Price')"
  },
  {
    "objectID": "100_dataset1/step2.html#quarto",
    "href": "100_dataset1/step2.html#quarto",
    "title": "Sydney Informatics Hub",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "100_dataset1/step2.html#running-code",
    "href": "100_dataset1/step2.html#running-code",
    "title": "Sydney Informatics Hub",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n2 * 2\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "400_dataset4/step1.html",
    "href": "400_dataset4/step1.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Predict whether a cancer is malignant or benign from biopsy details\n\n\n\n\n\n\nExercise:\n\n\n\nThis dataset, called the Breast Cancer Wisconsin (Diagnostic) Data Set, includes features computed from digitized images of biopsies. If you want to predict whether a cancer is malignant or benign from biopsies details, which model can you build?\n\n\nLoad the libraries:\n\nlibrary(RCurl)\n\nLoad the data:\n\n#load the data into a tibble using the RCurl package\nUCI_data_URL <- getURL('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data') \n\n#create a list with the appropriate column names \nnames <- c('id_number', 'diagnosis', 'radius_mean', \n         'texture_mean', 'perimeter_mean', 'area_mean', \n         'smoothness_mean', 'compactness_mean', \n         'concavity_mean','concave_points_mean', \n         'symmetry_mean', 'fractal_dimension_mean',\n         'radius_se', 'texture_se', 'perimeter_se', \n         'area_se', 'smoothness_se', 'compactness_se', \n         'concavity_se', 'concave_points_se', \n         'symmetry_se', 'fractal_dimension_se', \n         'radius_worst', 'texture_worst', \n         'perimeter_worst', 'area_worst', \n         'smoothness_worst', 'compactness_worst', \n         'concavity_worst', 'concave_points_worst', \n         'symmetry_worst', 'fractal_dimension_worst') \n\n#load the column names into a data frame and set the column names\nbreast_cancer <- read.table(textConnection(UCI_data_URL), sep = ',', col.names = names) \n\n#discard id_number column\nbreast_cancer$id_number <- NULL"
  },
  {
    "objectID": "400_dataset4/step1.html#quarto",
    "href": "400_dataset4/step1.html#quarto",
    "title": "Sydney Informatics Hub Machine Learning with R and tidymodels",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "400_dataset4/step1.html#running-code",
    "href": "400_dataset4/step1.html#running-code",
    "title": "Sydney Informatics Hub Machine Learning with R and tidymodels",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nCodelibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\nCode1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\nCode2 * 2\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "400_dataset4/step2.html",
    "href": "400_dataset4/step2.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:"
  },
  {
    "objectID": "400_dataset4/step2.html#quarto",
    "href": "400_dataset4/step2.html#quarto",
    "title": "Sydney Informatics Hub Machine Learning with R and tidymodels",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "400_dataset4/step2.html#running-code",
    "href": "400_dataset4/step2.html#running-code",
    "title": "Sydney Informatics Hub Machine Learning with R and tidymodels",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nCodelibrary(ggplot2)\nggplot(data = mtcars, \n       aes(x = mpg, y = hp, \n           col = as.factor(cyl))) + \n  geom_point() + \n  theme_minimal()\n\n\n\nCode1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\nCode2 * 2\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Machine learning with R and the tidyverse",
    "section": "Schedule",
    "text": "Schedule\nThis course is designed to be delivered either as 2 day face-to-face workshop or as four half day sessions delivered online.\n\n\n\nSession 1\n\n\n\n1:30 pm - 3:00 pm\nIntroduction to machine learning - Regrassion and Classification\n\n\n3:30 pm - 4:30 pm\nPredict the house sale price in Iowa - Exploratory data analysis (EDA)\n\n\n4:30 pm - 5:00 pm\nGet started with tidymodels\n\n\nSession 2\n\n\n\n1:30 pm - 2:00 pm\nPredict what makes a developer more likely to work remotely - EDA\n\n\n2:00 pm - 5:00 pm\nPreprocess with a recipe\n\n\nSession 3\n\n\n\n1:30 pm - 2:00 pm\nPredict which wine features are the best quality wine indicators - EDA\n\n\n2:00 pm - 5:00 pm\nCreate a modeling workflow\n\n\nSession 4\n\n\n\n1:30 pm - 2:00 pm\nPredict whether a cancer is malignant or benign from biopsy details - EDA\n\n\n2:00 pm - 5:00 pm\nWork with model hyperparameters\n\n\n\n\n\n\n\n\n\nPrerequisites\n\n\n\n\nYou need your own laptop with R and a few key packages installed. See setup instructions for more details."
  },
  {
    "objectID": "Introduction.html",
    "href": "Introduction.html",
    "title": "Introduction to Machine Learning with R and tidymodels",
    "section": "",
    "text": "Learning objectives\n\n\n\n\nuse exploratory data analysis to prepare for predictive modeling\nexplore which modeling approaches to use for different kinds of data\npractice implementing supervised machine learning for classification and regression\n\n\n\n\nWhat is Machine Learning\nMachine Learning (ML) is the field of study that gives computers the ability to learn from data without being explicitly programmed\n\nA ML system is trained rather than explicitly programmed;\nIt is a subset of the Artificial Intelligence;\nAlso known as predictive modeling/statistical learning.\n\n\nLearning by experience\nWe are never certain something will happen, but we usually know (or can estimate rather well) how likely it is to happen or, at least, what is most likely to happen, based on the experience we have acquired throughout our life.\nExperience in ML means: Data in the form of examples\nWe explore data to find patterns to understand the hidden laws that regulates the domain/make predictions about the world around us.\nWhat do we mean by learning?\nLearning is our means of attaining the ability to perform automatically a task.\nML tasks are usually described in terms of how the ML system should process an example.\nAn example is a collection of features that have been quantitatively or qualitative measured from some object or event that we want the machine learning system to process.\nTypically we represent an example as a vector x where each entry \\(x^{i}\\) of the vector is a different feature:\n\nFeatures of an image are usually the values of the pixels in the image;\nWe want to predict the price of an house on the basis of some characteristics (n° rooms, garden, position, floor, etc..) that are the features of each house example from which we learn.\n\nDifferent kind of tasks:\n\n\nClassification:\nThink of classification as predicting a category (or divide the socks by color). For example:\n\nGiven a sentence (maybe a tweet) the system should determines if it express a positive or negative or neutral feeling;\nGiven an image where it can be a dog or a cat, we want to determine with the system which one is present;\nTo solve this task, the learning algorithm is usually asked to produce a function \\(y= f(x)\\)\nSo the model takes an example x as input and after some processing \\(f(x)\\) it returns a value y that is one of the categories the example x should belong to. \n\n\n\nRegression:\nThink of regression as predicting numbers (or divide the ties by length). You are asking to predict a numerical value given some input. For example:\n\nGiven the house features we want to predict the price. It is a pure numerical and unbounded value (at least positive unbounded);\nTemperature of a city considering several factors (pulling, humidity, season,etc..);\nTo solve this task, the learning algorithm is asked to produce a function so that the model takes an example x as input and after some processing \\(f(x)\\) it returns a value y that can be any real value.\n\n\n\n\nfigure\n\n\nOnce we trained a model we might want to measure its performance for example the accuracy in classification task (proportion of correct predicted examples) or the average error in a regression task.\n\nWe want to measure performance on some data that have not been seen during training. Why? Because our goal is to build a model that is able to really understand the task and that is able to generalize.\nFor this reason we need a separate dataset called Test-set that we never used to train the model.\n\n\n\n\ntest_train\n\n\n\n\n\nTidyverse\nA hugely important part of any modeling approach is exploratory data analysis. In this course, we’ll be using tidyverse packages for getting to know your data, manipulating it, and visualizing it. The tidyverse is a collection of R packages designed for data science that share common APIs and an underlying philosophy. When you type library(tidyverse), what you’re doing is loading this collection of related packages for handling data using tidy data principles. These packages include ggplot2 for data visualization, and dplyr and tidyr for data manipulation and transformation. During this course, we’ll point out when we use functions from these different packages.\nVisit this page to learn more about tidyverse: https://www.tidyverse.org/learn/\n\nTidymodels\n…"
  },
  {
    "objectID": "00_setup.html",
    "href": "00_setup.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Question\n\n\n\n\nWhat packages do I need to install in order to attend the SIH’s Machine Learning with R course?"
  },
  {
    "objectID": "00_setup.html#installation-instructions",
    "href": "00_setup.html#installation-instructions",
    "title": "Sydney Informatics Hub",
    "section": "Installation instructions",
    "text": "Installation instructions\n\nif (getRversion() < 3.6){\n  stop(\"You need R >= 3.6 to attend the workshop. Please update R!\")\n}\n\nlist_of_pkgs <- c(\n  \"AmesHousing\",\n  \"tidyverse\",\n  \"readr\",\n  \"ggplot2\",\n  \"RCurl\"\n  )\n\nau_repo <- \"https://mirror.aarnet.edu.au/pub/CRAN/\"\n\n#install installr and rtools if windows\nif (.Platform$OS.type == \"windows\"){\n  install.packages(c(\"installr\"), repos = au_repo)\n  installr::install.Rtools(choose_version = F,\n                           check = T,\n                           GUI = T)\n  win_only <- c(\"installr\")\n} else {\n  win_only <- c()\n}\n\n# run the following line of code to install the packages you currently do not have\nnew_pkgs <- list_of_pkgs[!(list_of_pkgs %in% installed.packages()[,\"Package\"])]\nif(length(new_pkgs)) install.packages(new_pkgs,repos = au_repo)\n\n# install helper function to plot metrics\nlist_of_pkgs <- c(list_of_pkgs,\n                  win_only)\n\n#check everything is installed and write out an error message if it ain't.\nmissing_pkg <- list_of_pkgs[!(list_of_pkgs %in% installed.packages()[,\"Package\"])]\nif(length(missing_pkg)) {\n  print(\"=======================================================\")\n  print(\"Packages which didn't install properly:\")\n  print(missing_pkg)\n  print(\"Try to install them again or ask a helper for assistance.\")\n  print(\"=======================================================\")\n} else {\n  print(\"=======================================================\")\n  print(\"All packages installed properly! :)\")\n  print(\"=======================================================\")\n}\n\n[1] \"=======================================================\"\n[1] \"All packages installed properly! :)\"\n[1] \"=======================================================\"\n\n\n\n\n\n\n\n\nTo do before the workshop begins\n\n\n\n\nPlease copy and paste the code above in your Rstudio, run it and if there are any errors please let us know via email (sih.training@sydney.edu.au) BEFORE the workshop begins"
  },
  {
    "objectID": "300_dataset3/step1.html",
    "href": "300_dataset3/step1.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Predict which wine features are the best quality wine indicators\n\n\n\n\n\n\nExercise:\n\n\n\nThe Wine Quality dataset contains information about various chemical properties of different wines, including their acidity, residual sugar, and alcohol content. This dataset can be used to build a model to predict which features are the best quality red wine indicators. What kind of model will you build?\n\n\nLoad the libraries:\n\nlibrary(readr)\n\nLoad the data:\n\nlibrary(readr)\nwine_data <- read_delim(\"../datasets/winequality-red.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "200_dataset2/step1.html",
    "href": "200_dataset2/step1.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Predict what makes a developer more likely to work remotely\nStack Overflow is the world’s largest, most trusted online community for developers (I bet you have used it!) and every year there is a large survey of developers, to learn about developers’ opinions on different technologies, work habits, and so forth. You can find the link to the surveys here:\n\n\n\n\n\n\nLearning objective:\n\n\n\n\nYou are going to use data from the annual Developer Survey to build predictive models;\nYou’ll do exploratory data analysis to understand what’s in the dataset and how some of the quantities in the survey are distributed; -You’ll practice your machine learning skills by training classification/regression models.\n\n\n\n\n\n\n\n\n\nExercise:\n\n\n\nIn this case study, you will predict whether a developer works remotely or not (i.e., in their company offices) from characteristics of these developers, like experience and size of the company. In this analysis, we will assume that a software developer can either work remotely, or not. What kind of model will you build?\n\n\nLoad the libraries:\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\nLoad the data:\n\nlibrary(readr)\nStackSurvey <- read_csv(\"../datasets/stack_overflow.csv\", show_col_types = FALSE)\n\nStart off this modeling analysis by checking out how many remote and non-remote developers you have to work with, where they live, and how much experience they have:\n\n# Take a look at StackSurvey\nglimpse(StackSurvey)\n\nRows: 6,991\nColumns: 22\n$ respondent                           <dbl> 3, 15, 18, 19, 26, 55, 62, 71, 73…\n$ country                              <chr> \"United Kingdom\", \"United Kingdom…\n$ salary                               <dbl> 113750.000, 100000.000, 130000.00…\n$ years_coded_job                      <dbl> 20, 20, 20, 3, 16, 4, 1, 1, 20, 2…\n$ open_source                          <lgl> TRUE, FALSE, TRUE, FALSE, FALSE, …\n$ hobby                                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, FAL…\n$ company_size_number                  <dbl> 10000, 5000, 1000, 10000, 10000, …\n$ remote                               <chr> \"Not remote\", \"Remote\", \"Remote\",…\n$ career_satisfaction                  <dbl> 8, 8, 9, 5, 7, 9, 5, 8, 8, 10, 7,…\n$ data_scientist                       <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ database_administrator               <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ desktop_applications_developer       <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ developer_with_stats_math_background <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ dev_ops                              <lgl> FALSE, FALSE, TRUE, FALSE, FALSE,…\n$ embedded_developer                   <lgl> FALSE, TRUE, TRUE, FALSE, FALSE, …\n$ graphic_designer                     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ graphics_programming                 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ machine_learning_specialist          <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ mobile_developer                     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ quality_assurance_engineer           <lgl> FALSE, FALSE, TRUE, FALSE, FALSE,…\n$ systems_administrator                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE…\n$ web_developer                        <lgl> FALSE, FALSE, TRUE, TRUE, TRUE, T…\n\n# First count for `remote`\nStackSurvey %>% \n    count(remote, sort = TRUE)\n\n# A tibble: 2 × 2\n  remote         n\n  <chr>      <int>\n1 Not remote  6273\n2 Remote       718\n\n# then count for `country`\nStackSurvey %>% \n    count(country, sort = TRUE)\n\n# A tibble: 5 × 2\n  country            n\n  <chr>          <int>\n1 United States   3486\n2 United Kingdom  1270\n3 Germany          950\n4 India            666\n5 Canada           619\n\n\nUse the appropriate column from the data set so you can plot a boxplot with remote status on the x-axis and professional experience on the y-axis:\n\nggplot(StackSurvey, aes(remote, years_coded_job)) +\n    geom_boxplot() +\n    labs(x = NULL,\n         y = \"Years of professional coding experience\")"
  },
  {
    "objectID": "200_dataset2/step2.html",
    "href": "200_dataset2/step2.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:\n\n\n\n\nDealing with imbalanced data;\nprep()/bake()/juice();\nconfusion matrix;"
  },
  {
    "objectID": "300_dataset3/step2.html",
    "href": "300_dataset3/step2.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:\n\n\n\n\ntune model hyperparameters;\nworkflow();"
  },
  {
    "objectID": "100_dataset1/step1.html#exploratory-data-analysis",
    "href": "100_dataset1/step1.html#exploratory-data-analysis",
    "title": "Sydney Informatics Hub",
    "section": "Exploratory data analysis",
    "text": "Exploratory data analysis\nExploratory data analysis involves looking at:\n\nThe distribution of variables in your dataset;\nWhether any data is missing;\nData skewness;\nCorrelated variables.\n\n\n\n\n\n\n\nChallenge 1\n\n\n\n\nExplore the Ames Housing dataset.\n\nWhat can you figure out about the different variables?\nWhich do you think are more or less important?\n\n\nCompare the ameshousing variable, which is from the AmesHousing package in R and has been cleaned, with the ameshousing_uncleaned dataset, which is the raw data from the UCI machine learning repository.\n\nWhat was missing in the raw data?\nWhat are some of the approaches that have been taken to deal with missingness?\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWe can see that the “uncleaned” dataset has a lot of missing data, whereas it has been cleaned up for us in the “cleaned” one. In the interests of time, we will not focus here on how every variable in that dataset has been explored and cleaned up - however, it presents a good example of “messy” real-world data, so we would encourage you to try and look at a handful of variables at home, to see how they’ve been processed.\n\ndim(ameshousing)\n\n[1] 2930   81\n\nglimpse(ameshousing)\n\nRows: 2,930\nColumns: 81\n$ MS_SubClass        <fct> One_Story_1946_and_Newer_All_Styles, One_Story_1946…\n$ MS_Zoning          <fct> Residential_Low_Density, Residential_High_Density, …\n$ Lot_Frontage       <dbl> 141, 80, 81, 93, 74, 78, 41, 43, 39, 60, 75, 0, 63,…\n$ Lot_Area           <int> 31770, 11622, 14267, 11160, 13830, 9978, 4920, 5005…\n$ Street             <fct> Pave, Pave, Pave, Pave, Pave, Pave, Pave, Pave, Pav…\n$ Alley              <fct> No_Alley_Access, No_Alley_Access, No_Alley_Access, …\n$ Lot_Shape          <fct> Slightly_Irregular, Regular, Slightly_Irregular, Re…\n$ Land_Contour       <fct> Lvl, Lvl, Lvl, Lvl, Lvl, Lvl, Lvl, HLS, Lvl, Lvl, L…\n$ Utilities          <fct> AllPub, AllPub, AllPub, AllPub, AllPub, AllPub, All…\n$ Lot_Config         <fct> Corner, Inside, Corner, Corner, Inside, Inside, Ins…\n$ Land_Slope         <fct> Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, G…\n$ Neighborhood       <fct> North_Ames, North_Ames, North_Ames, North_Ames, Gil…\n$ Condition_1        <fct> Norm, Feedr, Norm, Norm, Norm, Norm, Norm, Norm, No…\n$ Condition_2        <fct> Norm, Norm, Norm, Norm, Norm, Norm, Norm, Norm, Nor…\n$ Bldg_Type          <fct> OneFam, OneFam, OneFam, OneFam, OneFam, OneFam, Twn…\n$ House_Style        <fct> One_Story, One_Story, One_Story, One_Story, Two_Sto…\n$ Overall_Qual       <fct> Above_Average, Average, Above_Average, Good, Averag…\n$ Overall_Cond       <fct> Average, Above_Average, Above_Average, Average, Ave…\n$ Year_Built         <int> 1960, 1961, 1958, 1968, 1997, 1998, 2001, 1992, 199…\n$ Year_Remod_Add     <int> 1960, 1961, 1958, 1968, 1998, 1998, 2001, 1992, 199…\n$ Roof_Style         <fct> Hip, Gable, Hip, Hip, Gable, Gable, Gable, Gable, G…\n$ Roof_Matl          <fct> CompShg, CompShg, CompShg, CompShg, CompShg, CompSh…\n$ Exterior_1st       <fct> BrkFace, VinylSd, Wd Sdng, BrkFace, VinylSd, VinylS…\n$ Exterior_2nd       <fct> Plywood, VinylSd, Wd Sdng, BrkFace, VinylSd, VinylS…\n$ Mas_Vnr_Type       <fct> Stone, None, BrkFace, None, None, BrkFace, None, No…\n$ Mas_Vnr_Area       <dbl> 112, 0, 108, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6…\n$ Exter_Qual         <fct> Typical, Typical, Typical, Good, Typical, Typical, …\n$ Exter_Cond         <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Foundation         <fct> CBlock, CBlock, CBlock, CBlock, PConc, PConc, PConc…\n$ Bsmt_Qual          <fct> Typical, Typical, Typical, Typical, Good, Typical, …\n$ Bsmt_Cond          <fct> Good, Typical, Typical, Typical, Typical, Typical, …\n$ Bsmt_Exposure      <fct> Gd, No, No, No, No, No, Mn, No, No, No, No, No, No,…\n$ BsmtFin_Type_1     <fct> BLQ, Rec, ALQ, ALQ, GLQ, GLQ, GLQ, ALQ, GLQ, Unf, U…\n$ BsmtFin_SF_1       <dbl> 2, 6, 1, 1, 3, 3, 3, 1, 3, 7, 7, 1, 7, 3, 3, 1, 3, …\n$ BsmtFin_Type_2     <fct> Unf, LwQ, Unf, Unf, Unf, Unf, Unf, Unf, Unf, Unf, U…\n$ BsmtFin_SF_2       <dbl> 0, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1120, 0…\n$ Bsmt_Unf_SF        <dbl> 441, 270, 406, 1045, 137, 324, 722, 1017, 415, 994,…\n$ Total_Bsmt_SF      <dbl> 1080, 882, 1329, 2110, 928, 926, 1338, 1280, 1595, …\n$ Heating            <fct> GasA, GasA, GasA, GasA, GasA, GasA, GasA, GasA, Gas…\n$ Heating_QC         <fct> Fair, Typical, Typical, Excellent, Good, Excellent,…\n$ Central_Air        <fct> Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, …\n$ Electrical         <fct> SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SB…\n$ First_Flr_SF       <int> 1656, 896, 1329, 2110, 928, 926, 1338, 1280, 1616, …\n$ Second_Flr_SF      <int> 0, 0, 0, 0, 701, 678, 0, 0, 0, 776, 892, 0, 676, 0,…\n$ Low_Qual_Fin_SF    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Gr_Liv_Area        <int> 1656, 896, 1329, 2110, 1629, 1604, 1338, 1280, 1616…\n$ Bsmt_Full_Bath     <dbl> 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, …\n$ Bsmt_Half_Bath     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Full_Bath          <int> 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 2, …\n$ Half_Bath          <int> 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, …\n$ Bedroom_AbvGr      <int> 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 2, 1, 4, 4, …\n$ Kitchen_AbvGr      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Kitchen_Qual       <fct> Typical, Typical, Good, Excellent, Typical, Good, G…\n$ TotRms_AbvGrd      <int> 7, 5, 6, 8, 6, 7, 6, 5, 5, 7, 7, 6, 7, 5, 4, 12, 8,…\n$ Functional         <fct> Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, T…\n$ Fireplaces         <int> 2, 0, 0, 2, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, …\n$ Fireplace_Qu       <fct> Good, No_Fireplace, No_Fireplace, Typical, Typical,…\n$ Garage_Type        <fct> Attchd, Attchd, Attchd, Attchd, Attchd, Attchd, Att…\n$ Garage_Finish      <fct> Fin, Unf, Unf, Fin, Fin, Fin, Fin, RFn, RFn, Fin, F…\n$ Garage_Cars        <dbl> 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, …\n$ Garage_Area        <dbl> 528, 730, 312, 522, 482, 470, 582, 506, 608, 442, 4…\n$ Garage_Qual        <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Garage_Cond        <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Paved_Drive        <fct> Partial_Pavement, Paved, Paved, Paved, Paved, Paved…\n$ Wood_Deck_SF       <int> 210, 140, 393, 0, 212, 360, 0, 0, 237, 140, 157, 48…\n$ Open_Porch_SF      <int> 62, 0, 36, 0, 34, 36, 0, 82, 152, 60, 84, 21, 75, 0…\n$ Enclosed_Porch     <int> 0, 0, 0, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Three_season_porch <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Screen_Porch       <int> 0, 120, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 140, …\n$ Pool_Area          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Pool_QC            <fct> No_Pool, No_Pool, No_Pool, No_Pool, No_Pool, No_Poo…\n$ Fence              <fct> No_Fence, Minimum_Privacy, No_Fence, No_Fence, Mini…\n$ Misc_Feature       <fct> None, None, Gar2, None, None, None, None, None, Non…\n$ Misc_Val           <int> 0, 0, 12500, 0, 0, 0, 0, 0, 0, 0, 0, 500, 0, 0, 0, …\n$ Mo_Sold            <int> 5, 6, 6, 4, 3, 6, 4, 1, 3, 6, 4, 3, 5, 2, 6, 6, 6, …\n$ Year_Sold          <int> 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 201…\n$ Sale_Type          <fct> WD , WD , WD , WD , WD , WD , WD , WD , WD , WD , W…\n$ Sale_Condition     <fct> Normal, Normal, Normal, Normal, Normal, Normal, Nor…\n$ Sale_Price         <int> 215000, 105000, 172000, 244000, 189900, 195500, 213…\n$ Longitude          <dbl> -93.61975, -93.61976, -93.61939, -93.61732, -93.638…\n$ Latitude           <dbl> 42.05403, 42.05301, 42.05266, 42.05125, 42.06090, 4…\n\ncolSums(is.na(ameshousing_uncleaned))\n\n          Order             PID     MS SubClass       MS Zoning    Lot Frontage \n              0               0               0               0             490 \n       Lot Area          Street           Alley       Lot Shape    Land Contour \n              0               0            2732               0               0 \n      Utilities      Lot Config      Land Slope    Neighborhood     Condition 1 \n              0               0               0               0               0 \n    Condition 2       Bldg Type     House Style    Overall Qual    Overall Cond \n              0               0               0               0               0 \n     Year Built  Year Remod/Add      Roof Style       Roof Matl    Exterior 1st \n              0               0               0               0               0 \n   Exterior 2nd    Mas Vnr Type    Mas Vnr Area      Exter Qual      Exter Cond \n              0              23              23               0               0 \n     Foundation       Bsmt Qual       Bsmt Cond   Bsmt Exposure  BsmtFin Type 1 \n              0              80              80              83              80 \n   BsmtFin SF 1  BsmtFin Type 2    BsmtFin SF 2     Bsmt Unf SF   Total Bsmt SF \n              1              81               1               1               1 \n        Heating      Heating QC     Central Air      Electrical      1st Flr SF \n              0               0               0               1               0 \n     2nd Flr SF Low Qual Fin SF     Gr Liv Area  Bsmt Full Bath  Bsmt Half Bath \n              0               0               0               2               2 \n      Full Bath       Half Bath   Bedroom AbvGr   Kitchen AbvGr    Kitchen Qual \n              0               0               0               0               0 \n  TotRms AbvGrd      Functional      Fireplaces    Fireplace Qu     Garage Type \n              0               0               0            1422             157 \n  Garage Yr Blt   Garage Finish     Garage Cars     Garage Area     Garage Qual \n            159             159               1               1             159 \n    Garage Cond     Paved Drive    Wood Deck SF   Open Porch SF  Enclosed Porch \n            159               0               0               0               0 \n     3Ssn Porch    Screen Porch       Pool Area         Pool QC           Fence \n              0               0               0            2917            2358 \n   Misc Feature        Misc Val         Mo Sold         Yr Sold       Sale Type \n           2824               0               0               0               0 \n Sale Condition       SalePrice \n              0               0 \n\ncolSums(is.na(ameshousing))\n\n       MS_SubClass          MS_Zoning       Lot_Frontage           Lot_Area \n                 0                  0                  0                  0 \n            Street              Alley          Lot_Shape       Land_Contour \n                 0                  0                  0                  0 \n         Utilities         Lot_Config         Land_Slope       Neighborhood \n                 0                  0                  0                  0 \n       Condition_1        Condition_2          Bldg_Type        House_Style \n                 0                  0                  0                  0 \n      Overall_Qual       Overall_Cond         Year_Built     Year_Remod_Add \n                 0                  0                  0                  0 \n        Roof_Style          Roof_Matl       Exterior_1st       Exterior_2nd \n                 0                  0                  0                  0 \n      Mas_Vnr_Type       Mas_Vnr_Area         Exter_Qual         Exter_Cond \n                 0                  0                  0                  0 \n        Foundation          Bsmt_Qual          Bsmt_Cond      Bsmt_Exposure \n                 0                  0                  0                  0 \n    BsmtFin_Type_1       BsmtFin_SF_1     BsmtFin_Type_2       BsmtFin_SF_2 \n                 0                  0                  0                  0 \n       Bsmt_Unf_SF      Total_Bsmt_SF            Heating         Heating_QC \n                 0                  0                  0                  0 \n       Central_Air         Electrical       First_Flr_SF      Second_Flr_SF \n                 0                  0                  0                  0 \n   Low_Qual_Fin_SF        Gr_Liv_Area     Bsmt_Full_Bath     Bsmt_Half_Bath \n                 0                  0                  0                  0 \n         Full_Bath          Half_Bath      Bedroom_AbvGr      Kitchen_AbvGr \n                 0                  0                  0                  0 \n      Kitchen_Qual      TotRms_AbvGrd         Functional         Fireplaces \n                 0                  0                  0                  0 \n      Fireplace_Qu        Garage_Type      Garage_Finish        Garage_Cars \n                 0                  0                  0                  0 \n       Garage_Area        Garage_Qual        Garage_Cond        Paved_Drive \n                 0                  0                  0                  0 \n      Wood_Deck_SF      Open_Porch_SF     Enclosed_Porch Three_season_porch \n                 0                  0                  0                  0 \n      Screen_Porch          Pool_Area            Pool_QC              Fence \n                 0                  0                  0                  0 \n      Misc_Feature           Misc_Val            Mo_Sold          Year_Sold \n                 0                  0                  0                  0 \n         Sale_Type     Sale_Condition         Sale_Price          Longitude \n                 0                  0                  0                  0 \n          Latitude \n                 0 \n\n\n\n\n\nUse naniar to visualise missingness\nWhen working with missing data, it can be helpful to look for “co-missingness”, i.e. multiple variables missing together. For example, when working with patient data, number of pregnancies, age at onset of menstruation and menopause may all be missing - which, when observed together, may indicate that these samples come from male patients for whom this data is irrelevant. “Gender” may or may not be a variable coded in the dataset.\nA way of visualising missing data in the tidy context has been proposed @tierney2018expanding. See this web page for more options for your own data.\nLet’s look at the missing variables in our housing data:\n\ngg_miss_var(ameshousing_uncleaned)\n\n\n\n\nWe can see that the most missingness is observed in the Pool_QC, Misc_Feature, Alley, Fence and Fireplace_QC variables. This is most likely due to many houses not having pools, alleys, fences, and fireplaces, and not having any features that the real estate agent considers to be notable enough to be added to the “miscellaneous” category.\nAn upset plot will give us more idea about the co-missingness of these variables:\n\ngg_miss_upset(ameshousing_uncleaned, nsets = 10)\n\n\n\n\n\n\n\n\n\n\nChallenge 2\n\n\n\n\nWhich variables are most frequently missing together?\nDoes this “co-missingness” make sense?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nFence, Alley, Misc feature and Pool QC are most often missing together. This probably means that a house doesn’t have an alley, a fence, a pool or any other miscellaneous features.\nSimilarly, the second most frequent “co-missingess” involves these plus missing “fireplace quality”, most likely due to the house not having fireplace.\nWe can also see that Garage_Yr_Blt, Garage_Finish, Garage_Qual and Garage Cond “co-miss” the same number of times - probably because these represent houses without garages.\n\n\n\n\nNext, let’s create two “helper” vectors with the names of the numeric and categorical variables from the ameshousing dataset, which we can then use to batch subset our dataset prior to EDA/visualisation:\n\n# pull out all of the numerical variables\nnumVars <- ameshousing %>% \n  select_if(is.numeric) %>%\n  names()\n\n# use Negate(is.numeric) to pull out all of the categorical variables\ncatVars <- ameshousing %>% \n  select_if(Negate(is.numeric)) %>%\n  names()\n\nLet’s then use the ggpairs() function to generate a plot of the first 10 numeric variables (and sale price, which is 33) against each other. We can repeat this for variables 11-20 and 21-33.\n\nggpairs(data = ameshousing, \n        columns = numVars[c(1:10, 33)], \n        title = \"Numeric variables 1 - 10\")\n\n\n\n# ggpairs(ameshousing, numVars[c(11:20, 33)], title = \"Numeric variables 11 - 20\")\n# ggpairs(ameshousing, numVars[c(21:33)], title = \"Numeric variables 21 - 33\")\nggpairs(data = ameshousing, \n        columns = c(catVars[2:5], \"Sale_Price\"), \n        title = \"Some categorical variables\")\n\n\n\n\nNext, we can generate a correlation plot between all of our numeric variables. By default, the cor() method will calculate the Pearson correlation between the Sale_Price and the other variables, and we can specify how we’d like to handle missing data when calculating this correlation.\nIn this case, we use pairwise.complete.obs, which calculates the correlation between each pair of variables using all complete pairs of observations on those variables.\nWe then plot the correlation using the corrplot library, which has several options for how to visualise a correlation plot. See here for some examples of the visualisations it can produce.\n\n# pairs.panels(ameshousing[ , names(ameshousing)[c(3, 16, 23, 27,37)]], scale=TRUE)\nameshousingCor <- cor(ameshousing[,numVars],\n                      use = \"pairwise.complete.obs\")\n\nameshousingCor_pvalues <- cor_pmat(ameshousingCor)\nggcorrplot(ameshousingCor, type = \"lower\")\n\n\n\n\nWe can also make a dynamic visualisation using plotly.\n\n#Bonus: interactive corrplot with zoom and mouseover\nggcorrplot(ameshousingCor, type = \"lower\") %>% ggplotly()\n\n\n\n\n\n\n\n\n\n\n\nChallenge 3\n\n\n\n\nWhat variables are the most correlated with SalePrice?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nas_tibble(ameshousingCor, rownames = \"rowname\") %>%\n  gather(pair, value, -rowname) %>%\n  filter(rowname != pair) %>% #remove self correlation\n  filter(rowname == \"Sale_Price\") %>%\n  arrange(desc(abs(value))) %>%\n  head()\n\n# A tibble: 6 × 3\n  rowname    pair          value\n  <chr>      <chr>         <dbl>\n1 Sale_Price Gr_Liv_Area   0.707\n2 Sale_Price Garage_Cars   0.648\n3 Sale_Price Garage_Area   0.640\n4 Sale_Price Total_Bsmt_SF 0.633\n5 Sale_Price First_Flr_SF  0.622\n6 Sale_Price Year_Built    0.558\n\n\nWe can also plot this, using a slightly different representation:\n\nCircles instead of only colour to represent correlation levels\nFilter out correlations less than 0.5\n\n\nall_numVar <- ameshousing[, numVars]\ncor_numVar <- cor(all_numVar, use=\"pairwise.complete.obs\") \nCorHigh <- as_tibble(\n  data.frame(correlation = cor_numVar[,'Sale_Price']), rownames = \"rownames\")  %>% \n  filter(abs(correlation) >= 0.5) %>% \n  .$rownames\nggcorrplot(cor_numVar[CorHigh, CorHigh], type = \"lower\", \"circle\")\n\n\n\n\n\n\n\nLet’s plot one of these relationships:\n\ngra <- ameshousing %>%\n  ggplot(aes(x = Gr_Liv_Area, y = Sale_Price/1000)) + \n  geom_point(alpha = 0.1) + \n  labs(y = \"Sale Price/$1000\",\n       x = \"Living Area (sq.ft)\",\n       title = \"Ames Housing Data\") +\n  geom_smooth(method= \"lm\")  +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngra %>% \n  ggplotly()\n\n\n\n\n\nWe can see that there are five houses with an area > 4000 square feet that seem to be outliers in the data. We should filter them out. Next, let’s generate a violin and boxplot by Quality:\n\nameshousing_filt <-\n  ameshousing %>%\n  filter(Gr_Liv_Area <= 4000)\n\np <- ameshousing_filt %>%\n  ggplot(aes(x = Overall_Qual, y = Sale_Price)) +\n  geom_violin() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nggplotly(p)\n\n\n\n\np <-ameshousing_filt %>%\n  mutate(Quality = as.factor(Overall_Qual)) %>%\n  ggplot(aes(x = Quality,\n             y = Sale_Price / 1000,\n             fill = Quality)) +\n  labs(y = \"Sale Price in $k's\",\n       x = \"Overall Quality of House\",\n       title = \"Ames Housing Data\") +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \nggplotly(p)"
  },
  {
    "objectID": "100_dataset1/step1.html#eda-of-outcome-variable",
    "href": "100_dataset1/step1.html#eda-of-outcome-variable",
    "title": "Sydney Informatics Hub",
    "section": "EDA of outcome variable",
    "text": "EDA of outcome variable\nYou also need to do EDA on the outcome variable to:\n\nidentify outliers\nexplore whether there is any skew in its distribution\nidentify a transformation to use when modelling the data (if appropriate)\n\nThis is because many models, including ordinary linear regression, assume that prediction errors (and hence the response) are normally distributed.\n\nameshousing_filt %>% \n  ggplot(aes(x = Sale_Price/1000)) + \n  geom_histogram(bins = 50) + \n  labs(x = \"Sale Price in $k's\",\n       y = \"Number of Houses sold\")\n\n\n\n\nLet’s explore different ways of transforming the Sale Price.\n\n#No transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = Sale_Price)) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#Sqrt transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = sqrt(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#natural log transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = log(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#log10 transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = log10(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n\n\n\n\n\n\n\nChallenge 4\n\n\n\n\nIf you were working with this dataset, which of the above would you prefer?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe log10 transformation seems best, as it both helps the distribution look more normal and helps keep our error metrics and final predictions easily interpretable. It also means that the errors of predicting the values of inexpensive and expensive houses will affect the prediction equally.\n\nbestNormalize::bestNormalize(\n  ameshousing_filt$Sale_Price,\n  allow_orderNorm = FALSE)\n\nBest Normalizing transformation with 2925 Observations\n Estimated Normality Statistics (Pearson P / df, lower => more normal):\n - arcsinh(x): 1.5968\n - Box-Cox: 1.6314\n - Center+scale: 5.2811\n - Log_b(x+a): 1.5968\n - sqrt(x + a): 2.7969\n - Yeo-Johnson: 1.6314\nEstimation method: Out-of-sample via CV with 10 folds and 5 repeats\nBased off these, bestNormalize chose:\nStandardized asinh(x) Transformation with 2925 nonmissing obs.:\n Relevant statistics:\n - mean (before standardization) = 12.71303 \n - sd (before standardization) = 0.4060161 \n\n\nThe bestNormalize library can be used to identify the best normalising transformation. Note that in this case, the arcsinh(x) and logarithmic transformations both achieve best normalisation results. To make interpretation a bit easier, we choose the logarithmic transformation.\n\n\n\n\nameshousing_filt <- ameshousing_filt %>% mutate(Sale_Price = log10(Sale_Price))"
  },
  {
    "objectID": "100_dataset1/step1.html#feature-engineering",
    "href": "100_dataset1/step1.html#feature-engineering",
    "title": "Sydney Informatics Hub",
    "section": "Feature engineering",
    "text": "Feature engineering\nThe year in which the house was built and the year when it was remodelled are not really the most relevant parameters we look at when buying a house: instead, buyers usually care a lot more about the age of the house and the time since the last remodel. Let’s engineer these features:\n\nameshousing_filt_engineered <-\n  ameshousing_filt %>%\n  mutate(Time_Since_Remodel = Year_Sold - Year_Remod_Add, \n         House_Age = Year_Sold - Year_Built) %>%\n  select(-Year_Remod_Add, -Year_Built)\n\nsaveRDS(ameshousing_filt_engineered, \"../_models/ames_dataset_filt.rds\")\n\nNote\nMake sure to create a “models” folder in your project working directory!\nBefore you can save your data as .Rds objects, you will actually need to create a folder for these files to go into. Do this by clicking on the “new folder” button in the files window in R studio. Rename your new folder to “models”."
  }
]