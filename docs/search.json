[
  {
    "objectID": "100_regression/step1.html",
    "href": "100_regression/step1.html",
    "title": "Sydney Informatics Hub",
    "section": "",
    "text": "Learning objective:\n\n\n\n\nUse Tidyverse functions for exploratory data analysis (EDA);\nExplore the Ames Housing dataset.\n\n\n\n\n\n\nFirst, let’s load the required packages. We will use the tidyverse for general data processing and visualisation.\n\nlibrary(tidyverse)\nlibrary(naniar) # for visualising missing data\nlibrary(GGally) # for EDA\nlibrary(ggcorrplot)\nlibrary(AmesHousing)\nlibrary(plotly) # dynamic visualisations\nlibrary(bestNormalize)\nlibrary(qs)\ntheme_set(theme_minimal())\n\nWe will use the Ames housing data to explore different ML approaches to regression. This dataset was “designed” by Dean De Cock as an alternative to the “classic” Boston housing dataset, and has been extensively used in ML teaching. It is also available from kaggle as part of its advanced regression practice competition.\nThe independent variables presented in the data include:\n\n20 continuous variables relate to various area dimensions for each observation;\n14 discrete variables, which typically quantify the number of items occurring within the house;\n23 ordinal, 23 nominal categorical variables, with 2 (STREET: gravel or paved) - 28 (NEIGHBORHOOD) classes;\n\nWe will explore both the “uncleaned” data available from kaggle/UCI, and the processed data available in the AmesHousing package in R, for which documentation is available here. It can be useful for understanding what each of the independent variables mean.\n\nameshousing <- AmesHousing::make_ames()\n\n# Read in the uncleaned data. \nameshousing_uncleaned <- AmesHousing::ames_raw\n\n\n\n\n\nExploratory data analysis involves looking at:\n\nThe distribution of variables in your dataset;\nWhether any data is missing;\nData skewness;\nCorrelated variables.\n\n\n\n\n\n\n\nChallenge 1\n\n\n\n\nExplore the Ames Housing dataset.\n\nWhat can you figure out about the different variables?\nWhich do you think are more or less important?\n\nCompare the ameshousing variable, which is from the AmesHousing package in R and has been cleaned, with the ameshousing_uncleaned dataset, which is the raw data from the UCI machine learning repository.\n\nWhat was missing in the raw data?\nWhat are some of the approaches that have been taken to deal with missingness?\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWe can see that the “uncleaned” dataset has a lot of missing data, whereas it has been cleaned up for us in the “cleaned” one. In the interests of time, we will not focus here on how every variable in that dataset has been explored and cleaned up - however, it presents a good example of “messy” real-world data, so we would encourage you to try and look at a handful of variables at home, to see how they’ve been processed.\n\ndim(ameshousing)\n\n[1] 2930   81\n\nglimpse(ameshousing)\n\nRows: 2,930\nColumns: 81\n$ MS_SubClass        <fct> One_Story_1946_and_Newer_All_Styles, One_Story_1946…\n$ MS_Zoning          <fct> Residential_Low_Density, Residential_High_Density, …\n$ Lot_Frontage       <dbl> 141, 80, 81, 93, 74, 78, 41, 43, 39, 60, 75, 0, 63,…\n$ Lot_Area           <int> 31770, 11622, 14267, 11160, 13830, 9978, 4920, 5005…\n$ Street             <fct> Pave, Pave, Pave, Pave, Pave, Pave, Pave, Pave, Pav…\n$ Alley              <fct> No_Alley_Access, No_Alley_Access, No_Alley_Access, …\n$ Lot_Shape          <fct> Slightly_Irregular, Regular, Slightly_Irregular, Re…\n$ Land_Contour       <fct> Lvl, Lvl, Lvl, Lvl, Lvl, Lvl, Lvl, HLS, Lvl, Lvl, L…\n$ Utilities          <fct> AllPub, AllPub, AllPub, AllPub, AllPub, AllPub, All…\n$ Lot_Config         <fct> Corner, Inside, Corner, Corner, Inside, Inside, Ins…\n$ Land_Slope         <fct> Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, Gtl, G…\n$ Neighborhood       <fct> North_Ames, North_Ames, North_Ames, North_Ames, Gil…\n$ Condition_1        <fct> Norm, Feedr, Norm, Norm, Norm, Norm, Norm, Norm, No…\n$ Condition_2        <fct> Norm, Norm, Norm, Norm, Norm, Norm, Norm, Norm, Nor…\n$ Bldg_Type          <fct> OneFam, OneFam, OneFam, OneFam, OneFam, OneFam, Twn…\n$ House_Style        <fct> One_Story, One_Story, One_Story, One_Story, Two_Sto…\n$ Overall_Qual       <fct> Above_Average, Average, Above_Average, Good, Averag…\n$ Overall_Cond       <fct> Average, Above_Average, Above_Average, Average, Ave…\n$ Year_Built         <int> 1960, 1961, 1958, 1968, 1997, 1998, 2001, 1992, 199…\n$ Year_Remod_Add     <int> 1960, 1961, 1958, 1968, 1998, 1998, 2001, 1992, 199…\n$ Roof_Style         <fct> Hip, Gable, Hip, Hip, Gable, Gable, Gable, Gable, G…\n$ Roof_Matl          <fct> CompShg, CompShg, CompShg, CompShg, CompShg, CompSh…\n$ Exterior_1st       <fct> BrkFace, VinylSd, Wd Sdng, BrkFace, VinylSd, VinylS…\n$ Exterior_2nd       <fct> Plywood, VinylSd, Wd Sdng, BrkFace, VinylSd, VinylS…\n$ Mas_Vnr_Type       <fct> Stone, None, BrkFace, None, None, BrkFace, None, No…\n$ Mas_Vnr_Area       <dbl> 112, 0, 108, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6…\n$ Exter_Qual         <fct> Typical, Typical, Typical, Good, Typical, Typical, …\n$ Exter_Cond         <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Foundation         <fct> CBlock, CBlock, CBlock, CBlock, PConc, PConc, PConc…\n$ Bsmt_Qual          <fct> Typical, Typical, Typical, Typical, Good, Typical, …\n$ Bsmt_Cond          <fct> Good, Typical, Typical, Typical, Typical, Typical, …\n$ Bsmt_Exposure      <fct> Gd, No, No, No, No, No, Mn, No, No, No, No, No, No,…\n$ BsmtFin_Type_1     <fct> BLQ, Rec, ALQ, ALQ, GLQ, GLQ, GLQ, ALQ, GLQ, Unf, U…\n$ BsmtFin_SF_1       <dbl> 2, 6, 1, 1, 3, 3, 3, 1, 3, 7, 7, 1, 7, 3, 3, 1, 3, …\n$ BsmtFin_Type_2     <fct> Unf, LwQ, Unf, Unf, Unf, Unf, Unf, Unf, Unf, Unf, U…\n$ BsmtFin_SF_2       <dbl> 0, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1120, 0…\n$ Bsmt_Unf_SF        <dbl> 441, 270, 406, 1045, 137, 324, 722, 1017, 415, 994,…\n$ Total_Bsmt_SF      <dbl> 1080, 882, 1329, 2110, 928, 926, 1338, 1280, 1595, …\n$ Heating            <fct> GasA, GasA, GasA, GasA, GasA, GasA, GasA, GasA, Gas…\n$ Heating_QC         <fct> Fair, Typical, Typical, Excellent, Good, Excellent,…\n$ Central_Air        <fct> Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, …\n$ Electrical         <fct> SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SBrkr, SB…\n$ First_Flr_SF       <int> 1656, 896, 1329, 2110, 928, 926, 1338, 1280, 1616, …\n$ Second_Flr_SF      <int> 0, 0, 0, 0, 701, 678, 0, 0, 0, 776, 892, 0, 676, 0,…\n$ Low_Qual_Fin_SF    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Gr_Liv_Area        <int> 1656, 896, 1329, 2110, 1629, 1604, 1338, 1280, 1616…\n$ Bsmt_Full_Bath     <dbl> 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, …\n$ Bsmt_Half_Bath     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Full_Bath          <int> 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 2, …\n$ Half_Bath          <int> 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, …\n$ Bedroom_AbvGr      <int> 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 2, 1, 4, 4, …\n$ Kitchen_AbvGr      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Kitchen_Qual       <fct> Typical, Typical, Good, Excellent, Typical, Good, G…\n$ TotRms_AbvGrd      <int> 7, 5, 6, 8, 6, 7, 6, 5, 5, 7, 7, 6, 7, 5, 4, 12, 8,…\n$ Functional         <fct> Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, Typ, T…\n$ Fireplaces         <int> 2, 0, 0, 2, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, …\n$ Fireplace_Qu       <fct> Good, No_Fireplace, No_Fireplace, Typical, Typical,…\n$ Garage_Type        <fct> Attchd, Attchd, Attchd, Attchd, Attchd, Attchd, Att…\n$ Garage_Finish      <fct> Fin, Unf, Unf, Fin, Fin, Fin, Fin, RFn, RFn, Fin, F…\n$ Garage_Cars        <dbl> 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, …\n$ Garage_Area        <dbl> 528, 730, 312, 522, 482, 470, 582, 506, 608, 442, 4…\n$ Garage_Qual        <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Garage_Cond        <fct> Typical, Typical, Typical, Typical, Typical, Typica…\n$ Paved_Drive        <fct> Partial_Pavement, Paved, Paved, Paved, Paved, Paved…\n$ Wood_Deck_SF       <int> 210, 140, 393, 0, 212, 360, 0, 0, 237, 140, 157, 48…\n$ Open_Porch_SF      <int> 62, 0, 36, 0, 34, 36, 0, 82, 152, 60, 84, 21, 75, 0…\n$ Enclosed_Porch     <int> 0, 0, 0, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Three_season_porch <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Screen_Porch       <int> 0, 120, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 140, …\n$ Pool_Area          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Pool_QC            <fct> No_Pool, No_Pool, No_Pool, No_Pool, No_Pool, No_Poo…\n$ Fence              <fct> No_Fence, Minimum_Privacy, No_Fence, No_Fence, Mini…\n$ Misc_Feature       <fct> None, None, Gar2, None, None, None, None, None, Non…\n$ Misc_Val           <int> 0, 0, 12500, 0, 0, 0, 0, 0, 0, 0, 0, 500, 0, 0, 0, …\n$ Mo_Sold            <int> 5, 6, 6, 4, 3, 6, 4, 1, 3, 6, 4, 3, 5, 2, 6, 6, 6, …\n$ Year_Sold          <int> 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 201…\n$ Sale_Type          <fct> WD , WD , WD , WD , WD , WD , WD , WD , WD , WD , W…\n$ Sale_Condition     <fct> Normal, Normal, Normal, Normal, Normal, Normal, Nor…\n$ Sale_Price         <int> 215000, 105000, 172000, 244000, 189900, 195500, 213…\n$ Longitude          <dbl> -93.61975, -93.61976, -93.61939, -93.61732, -93.638…\n$ Latitude           <dbl> 42.05403, 42.05301, 42.05266, 42.05125, 42.06090, 4…\n\ncolSums(is.na(ameshousing_uncleaned))\n\n          Order             PID     MS SubClass       MS Zoning    Lot Frontage \n              0               0               0               0             490 \n       Lot Area          Street           Alley       Lot Shape    Land Contour \n              0               0            2732               0               0 \n      Utilities      Lot Config      Land Slope    Neighborhood     Condition 1 \n              0               0               0               0               0 \n    Condition 2       Bldg Type     House Style    Overall Qual    Overall Cond \n              0               0               0               0               0 \n     Year Built  Year Remod/Add      Roof Style       Roof Matl    Exterior 1st \n              0               0               0               0               0 \n   Exterior 2nd    Mas Vnr Type    Mas Vnr Area      Exter Qual      Exter Cond \n              0              23              23               0               0 \n     Foundation       Bsmt Qual       Bsmt Cond   Bsmt Exposure  BsmtFin Type 1 \n              0              80              80              83              80 \n   BsmtFin SF 1  BsmtFin Type 2    BsmtFin SF 2     Bsmt Unf SF   Total Bsmt SF \n              1              81               1               1               1 \n        Heating      Heating QC     Central Air      Electrical      1st Flr SF \n              0               0               0               1               0 \n     2nd Flr SF Low Qual Fin SF     Gr Liv Area  Bsmt Full Bath  Bsmt Half Bath \n              0               0               0               2               2 \n      Full Bath       Half Bath   Bedroom AbvGr   Kitchen AbvGr    Kitchen Qual \n              0               0               0               0               0 \n  TotRms AbvGrd      Functional      Fireplaces    Fireplace Qu     Garage Type \n              0               0               0            1422             157 \n  Garage Yr Blt   Garage Finish     Garage Cars     Garage Area     Garage Qual \n            159             159               1               1             159 \n    Garage Cond     Paved Drive    Wood Deck SF   Open Porch SF  Enclosed Porch \n            159               0               0               0               0 \n     3Ssn Porch    Screen Porch       Pool Area         Pool QC           Fence \n              0               0               0            2917            2358 \n   Misc Feature        Misc Val         Mo Sold         Yr Sold       Sale Type \n           2824               0               0               0               0 \n Sale Condition       SalePrice \n              0               0 \n\ncolSums(is.na(ameshousing))\n\n       MS_SubClass          MS_Zoning       Lot_Frontage           Lot_Area \n                 0                  0                  0                  0 \n            Street              Alley          Lot_Shape       Land_Contour \n                 0                  0                  0                  0 \n         Utilities         Lot_Config         Land_Slope       Neighborhood \n                 0                  0                  0                  0 \n       Condition_1        Condition_2          Bldg_Type        House_Style \n                 0                  0                  0                  0 \n      Overall_Qual       Overall_Cond         Year_Built     Year_Remod_Add \n                 0                  0                  0                  0 \n        Roof_Style          Roof_Matl       Exterior_1st       Exterior_2nd \n                 0                  0                  0                  0 \n      Mas_Vnr_Type       Mas_Vnr_Area         Exter_Qual         Exter_Cond \n                 0                  0                  0                  0 \n        Foundation          Bsmt_Qual          Bsmt_Cond      Bsmt_Exposure \n                 0                  0                  0                  0 \n    BsmtFin_Type_1       BsmtFin_SF_1     BsmtFin_Type_2       BsmtFin_SF_2 \n                 0                  0                  0                  0 \n       Bsmt_Unf_SF      Total_Bsmt_SF            Heating         Heating_QC \n                 0                  0                  0                  0 \n       Central_Air         Electrical       First_Flr_SF      Second_Flr_SF \n                 0                  0                  0                  0 \n   Low_Qual_Fin_SF        Gr_Liv_Area     Bsmt_Full_Bath     Bsmt_Half_Bath \n                 0                  0                  0                  0 \n         Full_Bath          Half_Bath      Bedroom_AbvGr      Kitchen_AbvGr \n                 0                  0                  0                  0 \n      Kitchen_Qual      TotRms_AbvGrd         Functional         Fireplaces \n                 0                  0                  0                  0 \n      Fireplace_Qu        Garage_Type      Garage_Finish        Garage_Cars \n                 0                  0                  0                  0 \n       Garage_Area        Garage_Qual        Garage_Cond        Paved_Drive \n                 0                  0                  0                  0 \n      Wood_Deck_SF      Open_Porch_SF     Enclosed_Porch Three_season_porch \n                 0                  0                  0                  0 \n      Screen_Porch          Pool_Area            Pool_QC              Fence \n                 0                  0                  0                  0 \n      Misc_Feature           Misc_Val            Mo_Sold          Year_Sold \n                 0                  0                  0                  0 \n         Sale_Type     Sale_Condition         Sale_Price          Longitude \n                 0                  0                  0                  0 \n          Latitude \n                 0 \n\n\n\n\n\n\n\n\nWhen working with missing data, it can be helpful to look for “co-missingness”, i.e. multiple variables missing together. For example, when working with patient data, number of pregnancies, age at onset of menstruation and menopause may all be missing - which, when observed together, may indicate that these samples come from male patients for whom this data is irrelevant. “Gender” may or may not be a variable coded in the dataset.\nA way of visualising missing data in the tidy context has been proposed @tierney2018expanding. See this web page for more options for your own data.\nLet’s look at the missing variables in our housing data:\n\ngg_miss_var(ameshousing_uncleaned)\n\n\n\n\nWe can see that the most missingness is observed in the Pool_QC, Misc_Feature, Alley, Fence and Fireplace_QC variables. This is most likely due to many houses not having pools, alleys, fences, and fireplaces, and not having any features that the real estate agent considers to be notable enough to be added to the “miscellaneous” category.\nAn upset plot will give us more idea about the co-missingness of these variables:\n\ngg_miss_upset(ameshousing_uncleaned, nsets = 10)\n\n\n\n\n\n\n\n\n\n\nChallenge 2\n\n\n\n\nWhich variables are most frequently missing together?\nDoes this “co-missingness” make sense?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nFence, Alley, Misc feature and Pool QC are most often missing together. This probably means that a house doesn’t have an alley, a fence, a pool or any other miscellaneous features.\nSimilarly, the second most frequent “co-missingess” involves these plus missing “fireplace quality”, most likely due to the house not having fireplace.\nWe can also see that Garage_Yr_Blt, Garage_Finish, Garage_Qual and Garage Cond “co-miss” the same number of times - probably because these represent houses without garages.\n\n\n\n\nNext, let’s create two “helper” vectors with the names of the numeric and categorical variables from the ameshousing dataset, which we can then use to batch subset our dataset prior to EDA/visualisation:\n\n# pull out all of the numerical variables\nnumVars <- ameshousing %>% \n  select_if(is.numeric) %>%\n  names()\n\n# use Negate(is.numeric) to pull out all of the categorical variables\ncatVars <- ameshousing %>% \n  select_if(Negate(is.numeric)) %>%\n  names()\n\nLet’s then use the ggpairs() function to generate a plot of the first 10 numeric variables (and sale price, which is 33) against each other. We can repeat this for variables 11-20 and 21-33.\n\nggpairs(data = ameshousing, \n        columns = numVars[c(1:10, 33)], \n        title = \"Numeric variables 1 - 10\")\n\n\n\n# ggpairs(ameshousing, numVars[c(11:20, 33)], title = \"Numeric variables 11 - 20\")\n# ggpairs(ameshousing, numVars[c(21:33)], title = \"Numeric variables 21 - 33\")\nggpairs(data = ameshousing, \n        columns = c(catVars[2:5], \"Sale_Price\"), \n        title = \"Some categorical variables\")\n\n\n\n\nNext, we can generate a correlation plot between all of our numeric variables. By default, the cor() method will calculate the Pearson correlation between the Sale_Price and the other variables, and we can specify how we’d like to handle missing data when calculating this correlation.\nIn this case, we use pairwise.complete.obs, which calculates the correlation between each pair of variables using all complete pairs of observations on those variables.\nWe then plot the correlation using the corrplot library, which has several options for how to visualise a correlation plot. See here for some examples of the visualisations it can produce.\n\n# pairs.panels(ameshousing[ , names(ameshousing)[c(3, 16, 23, 27,37)]], scale=TRUE)\nameshousingCor <- cor(ameshousing[,numVars],\n                      use = \"pairwise.complete.obs\")\n\nameshousingCor_pvalues <- cor_pmat(ameshousingCor)\nggcorrplot(ameshousingCor, type = \"lower\")\n\n\n\n\nWe can also make a dynamic visualisation using plotly.\n\n#Bonus: interactive corrplot with zoom and mouseover\nggcorrplot(ameshousingCor, type = \"lower\") %>% ggplotly()\n\n\n\n\n\n\n\n\n\n\n\nChallenge 3\n\n\n\n\nWhat variables are the most correlated with SalePrice?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nas_tibble(ameshousingCor, rownames = \"rowname\") %>%\n  gather(pair, value, -rowname) %>%\n  filter(rowname != pair) %>% #remove self correlation\n  filter(rowname == \"Sale_Price\") %>%\n  arrange(desc(abs(value))) %>%\n  head()\n\n# A tibble: 6 × 3\n  rowname    pair          value\n  <chr>      <chr>         <dbl>\n1 Sale_Price Gr_Liv_Area   0.707\n2 Sale_Price Garage_Cars   0.648\n3 Sale_Price Garage_Area   0.640\n4 Sale_Price Total_Bsmt_SF 0.633\n5 Sale_Price First_Flr_SF  0.622\n6 Sale_Price Year_Built    0.558\n\n\nWe can also plot this, using a slightly different representation:\n\nCircles instead of only colour to represent correlation levels\nFilter out correlations less than 0.5\n\n\nall_numVar <- ameshousing[, numVars]\ncor_numVar <- cor(all_numVar, use=\"pairwise.complete.obs\") \nCorHigh <- as_tibble(\n  data.frame(correlation = cor_numVar[,'Sale_Price']), rownames = \"rownames\")  %>% \n  filter(abs(correlation) >= 0.5) %>% \n  .$rownames\nggcorrplot(cor_numVar[CorHigh, CorHigh], type = \"lower\", \"circle\")\n\n\n\n\n\n\n\nLet’s plot one of these relationships:\n\ngra <- ameshousing %>%\n  ggplot(aes(x = Gr_Liv_Area, y = Sale_Price/1000)) + \n  geom_point(alpha = 0.1) + \n  labs(y = \"Sale Price/$1000\",\n       x = \"Living Area (sq.ft)\",\n       title = \"Ames Housing Data\") +\n  geom_smooth(method= \"lm\")  +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngra %>% \n  ggplotly()\n\n\n\n\n\nWe can see that there are five houses with an area > 4000 square feet that seem to be outliers in the data. We should filter them out. Next, let’s generate a violin and boxplot by Quality:\n\nameshousing_filt <-\n  ameshousing %>%\n  filter(Gr_Liv_Area <= 4000)\n\np <- ameshousing_filt %>%\n  ggplot(aes(x = Overall_Qual, y = Sale_Price)) +\n  geom_violin() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nggplotly(p)\n\n\n\n\np <-ameshousing_filt %>%\n  mutate(Quality = as.factor(Overall_Qual)) %>%\n  ggplot(aes(x = Quality,\n             y = Sale_Price / 1000,\n             fill = Quality)) +\n  labs(y = \"Sale Price in $k's\",\n       x = \"Overall Quality of House\",\n       title = \"Ames Housing Data\") +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nYou also need to do EDA on the outcome variable to:\n\nidentify outliers\nexplore whether there is any skew in its distribution\nidentify a transformation to use when modelling the data (if appropriate)\n\nThis is because many models, including ordinary linear regression, assume that prediction errors (and hence the response) are normally distributed.\n\nameshousing_filt %>% \n  ggplot(aes(x = Sale_Price/1000)) + \n  geom_histogram(bins = 50) + \n  labs(x = \"Sale Price in $k's\",\n       y = \"Number of Houses sold\")\n\n\n\n\nLet’s explore different ways of transforming the Sale Price.\n\n#No transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = Sale_Price)) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#Sqrt transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = sqrt(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#natural log transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = log(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n#log10 transform\n\nameshousing_filt %>%\n  ggplot(aes( sample = log10(Sale_Price))) +\n  stat_qq() + stat_qq_line(col = \"blue\")\n\n\n\n\n\n\n\n\n\n\nChallenge 4\n\n\n\n\nIf you were working with this dataset, which of the above would you prefer?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe log10 transformation seems best, as it both helps the distribution look more normal and helps keep our error metrics and final predictions easily interpretable. It also means that the errors of predicting the values of inexpensive and expensive houses will affect the prediction equally.\n\nbestNormalize::bestNormalize(\n  ameshousing_filt$Sale_Price,\n  allow_orderNorm = FALSE)\n\nBest Normalizing transformation with 2925 Observations\n Estimated Normality Statistics (Pearson P / df, lower => more normal):\n - arcsinh(x): 1.5968\n - Box-Cox: 1.6314\n - Center+scale: 5.2811\n - Log_b(x+a): 1.5968\n - sqrt(x + a): 2.7969\n - Yeo-Johnson: 1.6314\nEstimation method: Out-of-sample via CV with 10 folds and 5 repeats\n \nBased off these, bestNormalize chose:\nStandardized asinh(x) Transformation with 2925 nonmissing obs.:\n Relevant statistics:\n - mean (before standardization) = 12.71303 \n - sd (before standardization) = 0.4060161 \n\n\nThe bestNormalize library can be used to identify the best normalising transformation. Note that in this case, the arcsinh(x) and logarithmic transformations both achieve best normalisation results. To make interpretation a bit easier, we choose the logarithmic transformation.\n\n\n\n\nameshousing_filt <- ameshousing_filt %>% mutate(Sale_Price = log10(Sale_Price))\n\n\n\n\n\nThe year in which the house was built and the year when it was remodelled are not really the most relevant parameters we look at when buying a house: instead, buyers usually care a lot more about the age of the house and the time since the last remodel. Let’s transform these features:\n\nameshousing_filt_tr <-\n  ameshousing_filt %>%\n  mutate(Time_Since_Remodel = Year_Sold - Year_Remod_Add, \n         House_Age = Year_Sold - Year_Built) %>%\n  select(-Year_Remod_Add, -Year_Built)\n\nqsave(ameshousing_filt_tr, \"../_models/ames_dataset_filt.qs\")\n\n\nNote Make sure to create a “models” folder in your project working directory! Before you can save your data as .Rds objects, you will actually need to create a folder for these files to go into. Do this by clicking on the “new folder” button in the files window in R studio. Rename your new folder to “models”.\n\n\n\n\n\n\n\nKey points\n\n\n\nExploratory Data Analysis (EDA) is an essential first step in ML.\n\n\nTierney, Nicholas J, and Dianne H Cook. 2018. “Expanding Tidy Data Principles to Facilitate Missing Data Exploration, Visualization and Assessment of Imputations.” arXiv Preprint arXiv:1809.02264."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Machine learning with R and the tidyverse",
    "section": "",
    "text": "This is the landing page for the Sydney Informatics Hub’s “Machine learning with R and the tidyverse”."
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Machine learning with R and the tidyverse",
    "section": "Schedule",
    "text": "Schedule\nThis course is designed to be delivered either as 2 day face-to-face workshop or as four half day sessions delivered online.\n\n\n\nDay 1\n\n\n\nMorning\nIntroduction to machine learning\n\n\n\nExploratory data analysis (EDA) - Regression\n\n\nAfternoon\nGet started with tidymodels and workflows\n\n\nDay 2\n\n\n\nMorning\nEDA - Classification\n\n\nAfternoon\nTuning hyperparameters and compare multiple model workflows\n\n\n\n\n\n\n\n\n\nPrerequisites\n\n\n\n\nThis course assumes intermediate R knowledge. This workshop is for you if:\n\nYou can use the magrittr pipe %>%;\nYou are familiar with functions from dplyr, tidyr, and ggplot2;\nYou can read data into R, transform and reshape data, and make a wide variety of graphs.\n\nWe expect participants to have some exposure to basic statistical concepts, but NOT intermediate or expert familiarity with modeling or machine learning;\nYou need your own laptop with R and a few key packages installed. See setup instructions for more details."
  }
]